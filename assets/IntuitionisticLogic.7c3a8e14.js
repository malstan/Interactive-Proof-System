import{r as w,N as x,O as Z,a0 as _,$ as I,V as S,R as v,j as u,_ as j,U as k,W as E,au as q,F as ue,S as de,z as fe,av as ve,aw as P,P as G,w as Y,I as Ie}from"./index.04e7caea.js";import{Q as we}from"./rtl.46acdc12.js";import{Q as oe,a as me,b as be,_ as xe,c as Fe,d as Ce,e as Ee}from"./QScrollArea.d4c13a43.js";import{Q as Se}from"./QPage.bb6e3ab2.js";import{_ as ce}from"./FormulaInput.1258d447.js";import{I as pe}from"./intuitionisticLogicStore.8472dcb3.js";import{n as N,Q as je}from"./nearley.3bdbb93f.js";import{i as n}from"./index.392eb83b.js";import{Q as A,a as ne,b as ie}from"./QCard.37cb0529.js";import{d as ge,e as he,f as ye}from"./QMenu.e58b2c29.js";import"./use-dark.56db28bb.js";import"./position-engine.387d1057.js";import"./touch.a7025dd6.js";var ee={Lexer:void 0,ParserRules:[{name:"formula",symbols:[{literal:"\u22A2"},"statementIL"]},{name:"formula",symbols:["statement",{literal:"\u22A2"},"statementIL"]},{name:"formula",symbols:["statement",{literal:"\u22A2"}]},{name:"formula",symbols:["statement"],postprocess:z},{name:"statement",symbols:["implication"],postprocess:z},{name:"statement$ebnf$1$subexpression$1",symbols:[{literal:","},"implication"]},{name:"statement$ebnf$1",symbols:["statement$ebnf$1$subexpression$1"]},{name:"statement$ebnf$1$subexpression$2",symbols:[{literal:","},"implication"]},{name:"statement$ebnf$1",symbols:["statement$ebnf$1","statement$ebnf$1$subexpression$2"],postprocess:function(l){return l[0].concat([l[1]])}},{name:"statement",symbols:["implication","statement$ebnf$1"],postprocess:s=>{const l=s[1].map(t=>t.filter(e=>e!=","));return s.pop(),l.forEach(t=>t.length>1?s.push(t):s.push(t[0])),s}},{name:"statementIL",symbols:["implication"],postprocess:z},{name:"implication",symbols:["disjunction",{literal:"\u21D2"},"implication"]},{name:"implication",symbols:["disjunction"],postprocess:z},{name:"disjunction",symbols:["conjunction",{literal:"\u2228"},"disjunction"]},{name:"disjunction",symbols:["conjunction"],postprocess:z},{name:"conjunction",symbols:["negation",{literal:"\u2227"},"conjunction"]},{name:"conjunction",symbols:["negation"],postprocess:z},{name:"negation",symbols:[{literal:"\xAC"},"term"]},{name:"negation",symbols:["term"],postprocess:z},{name:"term",symbols:["symbol"],postprocess:z},{name:"term",symbols:[{literal:"("},"statement",{literal:")"}]},{name:"symbol",symbols:[/[α-ωΑ-Ω]/],postprocess:z},{name:"symbol",symbols:[{literal:"\u22A5"}],postprocess:z},{name:"symbol",symbols:[{literal:"\u22A4"}],postprocess:z}],ParserStart:"formula"};function z(s){return s[0]}const Le=[{name:"gsk-tree-id",apply:qe},{name:"gsk-tree-nr",apply:Ne},{name:"gsk-tree-nl",apply:Re},{name:"gsk-tree-cr",apply:Ae},{name:"gsk-tree-cl1",apply:Pe},{name:"gsk-tree-cl2",apply:Ve},{name:"gsk-tree-dr1",apply:Te},{name:"gsk-tree-dr2",apply:Oe},{name:"gsk-tree-dl",apply:Me},{name:"gsk-tree-ir",apply:De},{name:"gsk-tree-il",apply:He},{name:"gsk-tree-wl",apply:Qe},{name:"gsk-tree-col",apply:Ue},{name:"gsk-tree-cut",apply:We},{name:"gsk-tree-exl",apply:Ge}];function C(s){if(!Array.isArray(s))return s;s[0]=="("&&s[2]==")"&&(s=s[1]);let l=s.join("");return l=l.replaceAll(",",""),l}function te(s,l){return s[s.length-1]==="\u22A2"?`${s}${l}`:`${s},${l}`}function le(s,l){if(s[0]==="\u22A2")return`${l}${s}`;{let t=s.split("\u22A2");return`${t[0]},${l}\u22A2${t[1]}`}}function X(s){s[0]===","&&(s=s.slice(1));let l=s.indexOf("\u22A2");return s[l-1]===","&&(s=s.slice(0,l-1)+s.slice(l),l--),s[l+1]===","&&(s=s.slice(0,l+1)+s.slice(l+2)),s[s.length-1]===","&&(s=s.slice(0,-1)),s=s.replace(/,,/g,","),s}function O(s){return!(s.includes("\xAC")||s.includes("\u2227")||s.includes("\u2228")||s.includes("\u21D2"))}function qe(s,l,t){let e=l[l.indexOf("\u22A2")-1],a=l[l.indexOf("\u22A2")+1];if(e==null||a==null||Array.isArray(e)&&e.some(i=>Array.isArray(i)&&i[0]!="\xAC")||Array.isArray(a)&&a.some(i=>Array.isArray(i)&&i[0]!="\xAC"))return s;e=!O(e)||!Array.isArray(e)?[C(e)]:e.map(C),a=!O(a)||!Array.isArray(a)?[C(a)]:a==null?void 0:a.map(C);const r=s.replace("\u22A2",",").split(",").filter(i=>i!="")[t];return e.includes(r)&&a.includes(r)?[s,[""],"(id)"]:s}function Ne(s,l,t){let e=l[l.indexOf("\u22A2")+1];if(e===void 0)return s;if(O(e)&&(e=e[t]),e!==null&&e.includes("\xAC")){e=C(e);let a=s.replace(e,"");return e=e.replace("\xAC",""),a=X(a),[s,[le(a,e)],"(\xACr)"]}else return s}function Re(s,l,t){let e=l[l.indexOf("\u22A2")-1];if(e===void 0)return s;if(O(e)&&(e=e[t]),e!==null&&e.includes("\xAC")){e=C(e);let a=s.replace(e,"");return e=e.replace("\xAC",""),a=X(a),[s,[te(a,e)],"(\xACl)"]}else return s}function Ae(s,l,t){let e=l[l.indexOf("\u22A2")+1];if(e===void 0)return s;if(O(e)&&(e=e[t]),e!==null&&e.includes("\u2227")){let a=e[0],r=e[2];e=C(e);let i=s.replace(e,"");return i=X(i),[s,[te(i,C(a)),te(i,C(r))],"(\u2227r)"]}else return s}function Pe(s,l,t){let e=l[l.indexOf("\u22A2")-1];if(e===void 0)return s;if(O(e)&&(e=e[t]),e!==null&&e.includes("\u2227")){let a=e[0];e=C(e);let r=s.replace(e,"");return r=X(r),[s,[le(r,C(a))],"(\u2227l1)"]}else return s}function Ve(s,l,t){let e=l[l.indexOf("\u22A2")-1];if(e===void 0)return s;if(O(e)&&(e=e[t]),e!==null&&e.includes("\u2227")){let a=e[2];e=C(e);let r=s.replace(e,"");return r=X(r),[s,[le(r,C(a))],"(\u2227l2)"]}else return s}function Te(s,l,t){let e=l[l.indexOf("\u22A2")+1];if(e===void 0)return s;if(O(e)&&(e=e[t]),e!==null&&e.includes("\u2228")){let a=e[0];e=C(e);let r=s.replace(e,"");return r=X(r),[s,[te(r,C(a))],"(\u2228r1)"]}else return s}function Oe(s,l,t){let e=l[l.indexOf("\u22A2")+1];if(e===void 0)return s;if(O(e)&&(e=e[t]),e!==null&&e.includes("\u2228")){let a=e[2];e=C(e);let r=s.replace(e,"");return r=X(r),[s,[te(r,C(a))],"(\u2228r2)"]}else return s}function Me(s,l,t){let e=l[l.indexOf("\u22A2")-1];if(e===void 0)return s;if(O(e)&&(e=e[t]),e!==null&&e.includes("\u2228")){let a=e[0],r=e[2];e=C(e);let i=s.replace(e,"");return i=X(i),[s,[le(i,C(a)),le(i,C(r))],"(\u2228l)"]}else return s}function De(s,l,t){let e=l[l.indexOf("\u22A2")+1];if(e===void 0)return s;if(O(e)&&(e=e[t]),e!==null&&e.includes("\u21D2")){let a=e[0],r=e[2];e=C(e);let i=s.replace(e,"");return i=X(i),[s,[le(te(i,C(r)),C(a))],"(\u21D2r)"]}else return s}function He(s,l,t){let e=l[l.indexOf("\u22A2")-1];if(e===void 0)return s;if(O(e)&&(e=e[t]),e!==null&&e.includes("\u21D2")){let a=e[0],r=e[2];e=C(e);let i=s.replace(e,"");return i=X(i),[s,[te(`${i.split("\u22A2")[0]}\u22A2`,C(a)),le(i,C(r))],"(\u21D2l)"]}else return s}function Qe(s,l,t){let e=l[l.indexOf("\u22A2")-1];if(e===void 0)return s;if(O(e)&&(e=e[t]),e!==null){e=C(e);let a=s.replace(e,"");return a=X(a),[s,[a],"(wl)"]}else return s}function Ue(s,l,t){let e=l[l.indexOf("\u22A2")-1];return e===void 0?s:(O(e)&&(e=e[t]),e!==null?(e=C(e),[s,[le(s,e)],"(cl)"]):s)}function We(s,l,t,e){return e!==null?[s,[te(s,e),le(s,e)],"(cut)"]:s}function Ge(s,l,t,e,a){if(a.first&&a.second){let i=s.split("\u22A2")[0].split(","),h=i.indexOf(a.first),$=i.indexOf(a.second);i[h]=a.second,i[$]=a.first;let L=i.join(",")+s.slice(s.indexOf("\u22A2"));return[s,[L],"(exl)"]}else return s}const Be=[{name:"nd-tree-vi",apply:Ke},{name:"nd-tree-ae1",apply:ze},{name:"nd-tree-ne",apply:Je},{name:"nd-tree-ci",apply:Xe},{name:"nd-tree-ce1",apply:Ye},{name:"nd-tree-ce2",apply:Ze},{name:"nd-tree-di1",apply:el},{name:"nd-tree-di2",apply:ll},{name:"nd-tree-de",apply:sl},{name:"nd-tree-ii",apply:tl},{name:"nd-tree-ie",apply:al}];function J(s){if(!Array.isArray(s))return s;s[0]=="("&&s[2]==")"&&(s=s[1]);let l=s.join("");return l=l.replaceAll(",",""),l}function re(s){return s.length>1?`(${s})`:s}function Ke(s,l){return s=="\u22A4"?[s,[],"(\u22A4I)"]:s}function ze(s,l){return[s,["\u22A5"],"(\u22A5E1)"]}function Je(s,l,t){if(s=="\u22A5"){let e=t.asString,a=`\xAC${re(t.asString)}`;return[s,[e,a],"(\xACE)"]}else return s}function Xe(s,l){if(l.includes("\u2227")){let t=l[0],e=l[2];return[s,[J(t),J(e)],"(\u2227I)"]}else return s}function Ye(s,l,t){let e=re(J(l)),a=re(t.asString);return[s,[`${e}\u2227${a}`],"(\u2227E1)"]}function Ze(s,l,t){let e=re(t.asString),a=re(J(l));return[s,[`${e}\u2227${a}`],"(\u2227E2)"]}function el(s,l){if(l.includes("\u2228")){let t=l[0];return[s,[J(t)],"(\u2227I1)"]}else return s}function ll(s,l){if(l.includes("\u2228")){let t=l[2];return[s,[J(t)],"(\u2227I1)"]}else return s}function sl(s,l,t){return t.asAst.includes("\u2228")?[s,[t.asString,s,s],"(\u2228E)",[J(t.asAst[0]),J(t.asAst[2])]]:s}function tl(s,l){if(l.includes("\u21D2")){let t=l[0],e=l[2];return[s,[J(e)],"(\u21D2I)",[J(t)]]}else return s}function al(s,l,t){return[s,[t.asString,`${re(t.asString)}\u21D2${re(J(l))}`],"(\u2227E2)"]}const nl=[{name:"nd-fitch-as",apply:il},{name:"nd-fitch-ae1",apply:rl},{name:"nd-fitch-ne",apply:ol},{name:"nd-fitch-ci",apply:ul},{name:"nd-fitch-ce1",apply:dl},{name:"nd-fitch-ce2",apply:cl},{name:"nd-fitch-di1",apply:pl},{name:"nd-fitch-di2",apply:fl},{name:"nd-fitch-de",apply:vl},{name:"nd-fitch-ii",apply:ml},{name:"nd-fitch-ie",apply:bl}];function B(s){return s.length>1?`(${s})`:s}function il(s,l,t){return{formula:s,rule:"AS",depth:t.length>0?t[t.length-1].depth+1:1}}function rl(s,l,t){var e;return isNaN(l)||((e=t[l-1])==null?void 0:e.formula)!="\u22A5"?!1:{formula:s,rule:"\u22A5E1, "+l,depth:t[t.length-1].depth}}function ol(s,l,t){var a,r,i,h;let e=l.split(",");return e.some($=>isNaN($))||((a=t[e[0]-1])==null?void 0:a.formula)!=`\xAC${B((r=t[e[1]-1])==null?void 0:r.formula)}`||((i=t[e[0]-1])==null?void 0:i.depth)>((h=t[e[1]-1])==null?void 0:h.depth)?!1:{formula:"\u22A5",rule:"\xACE, "+l,depth:t[t.length-1].depth}}function ul(s,l,t){var a,r;let e=l.split(",");return e.some(i=>isNaN(i))||((a=t[e[0]-1])==null?void 0:a.depth)>((r=t[e[1]-1])==null?void 0:r.depth)?!1:{formula:`${B(t[e[0]-1].formula)}\u2227${B(t[e[1]-1].formula)}`,rule:"\u2227I, "+l,depth:t[t.length-1].depth}}function dl(s,l,t){var e;return isNaN(l)||!((e=t[l-1])!=null&&e.formula.includes("\u2227"))?!1:{formula:t[l-1].formula.split("\u2227")[0],rule:"\u2227E1, "+l,depth:t[t.length-1].depth}}function cl(s,l,t){var e;return isNaN(l)||!((e=t[l-1])!=null&&e.formula.includes("\u2227"))?!1:{formula:t[l-1].formula.split("\u2227")[1],rule:"\u2227E2, "+l,depth:t[t.length-1].depth}}function pl(s,l,t){var e;return isNaN(l)||!((e=t[l-1])!=null&&e.formula)?!1:{formula:`${B(t[l-1].formula)}\u2228${B(s)}`,rule:"\u2228I1, "+l,depth:t[t.length-1].depth}}function fl(s,l,t){var e;return isNaN(l)||!((e=t[l-1])!=null&&e.formula)?!1:{formula:`${B(s)}\u2228${B(t[l-1].formula)}`,rule:"\u2228I2, "+l,depth:t[t.length-1].depth}}function vl(s,l,t){var a,r,i,h,$,L,T,R,M,D,Q,K,se,b,g;let e=l.split(",");return e.some(F=>isNaN(F))||((a=t[e[1]-1])==null?void 0:a.rule)!="AS"||((r=t[e[3]-1])==null?void 0:r.rule)!="AS"||((i=t[e[0]-1])==null?void 0:i.formula)!=`${B((h=t[e[1]-1])==null?void 0:h.formula)}\u2228${B(($=t[e[3]-1])==null?void 0:$.formula)}`||((L=t[e[2]])==null?void 0:L.formula)!=((T=t[e[4]])==null?void 0:T.formula)||((R=t[e[1]-1])==null?void 0:R.depth)>((M=t[e[2]-1])==null?void 0:M.depth)||((D=t[e[3]-1])==null?void 0:D.depth)>((Q=t[e[4]-1])==null?void 0:Q.depth)||((K=t[e[1]-1])==null?void 0:K.depth)!=((se=t[e[3]-1])==null?void 0:se.depth)||((b=t[e[1]-1])==null?void 0:b.depth)-1!=((g=t[e[0]-1])==null?void 0:g.depth)?!1:{formula:t[e[1]].formula,rule:"\u2228E, "+l,depth:t[e[0]-1].depth}}function ml(s,l,t){var a,r,i;let e=l.split("-");return e.some(h=>isNaN(h))||((a=t[e[0]-1])==null?void 0:a.rule)!="AS"||((r=t[e[0]-1])==null?void 0:r.depth)>((i=t[e[1]-1])==null?void 0:i.depth)?!1:{formula:`${B(t[e[0]-1].formula)}\u21D2${B(t[e[1]-1].formula)}`,rule:"\u21D2I, "+l,depth:t[e[0]-1].depth-1}}function bl(s,l,t){var r,i,h,$;let e=l.split(",");if(e.some(L=>isNaN(L)))return!1;let a=(r=t[e[0]-1])==null?void 0:r.formula.split("\u21D2");return a[0]!=B((i=t[e[1]-1])==null?void 0:i.formula)||((h=t[e[0]-1])==null?void 0:h.depth)>(($=t[e[1]-1])==null?void 0:$.depth)?!1:{formula:a[1],rule:"\u21D2E, "+l,depth:t[t.length-1].depth}}function _e(s,l){let t;l=="GSK"&&!s.includes("\u22A2")?t="\u22A2"+s:t=s,t=t.replaceAll(" ","");const e=new N.Parser(N.Grammar.fromCompiled(ee));try{if(e.feed(t),e.results.length===0)throw new Error("Formula is not valid.");if(l=="ND"&&e.results[0].every(Array.isArray))throw new Error("Formula is not valid.")}catch{return!1}const a=e.results[0];if(l=="ND"&&t.includes("\u22A2")){if(a[1]=="\u22A2"&&a.length<3)return!1;let[i,h]=t.split("\u22A2");return{hypothesis:i.split(","),formula:h}}let r=a.indexOf("\u22A2");return(r==0&&a[1][0]=="("||r==1&&a[0][0]=="("||a[0]=="("&&a[2]==")")&&(t=t.replace("(","").replace(/\)(?=[^\)]*$)/,"")),t}function gl(s,l,t,e,a,r){return Le.find(i=>i.name==s).apply(l,t,e,a,r)}function hl(s,l,t,e){return Be.find(a=>a.name==s).apply(l,t,e)}function yl(s,l,t,e){return nl.find(a=>a.name==s).apply(l,t,e)}const _l=[{rule:"gsk-tree-id",label:n.global.t("rules.identity.label"),desc:`${n.global.t("rules.identity.title")} (id)`,proof:'<div class="q-ma-sm rule"> <div class="rule__border-top"> <span>\u2126, \u03D5 \u22A2 \u03D5</span> <span class="rule__border-top__rule-name">(id)</span> </div> </div>'},{rule:"gsk-tree-nl",label:n.global.t("rules.negation.left.label"),desc:`${n.global.t("rules.negation.left.title")} (\xACl)`,proof:' <div class="q-ma-sm rule"> <div>\u2126 \u22A2 \u03D5</div> <div class="rule__border-top"> <span>\u2126, \xAC\u03D5 \u22A2</span> <span class="rule__border-top__rule-name">(\xACl)</span> </div> </div>'},{rule:"gsk-tree-nr",label:n.global.t("rules.negation.right.label"),desc:`${n.global.t("rules.negation.right.title")} (\xACr)`,proof:'<div class="q-ma-sm rule"> <div>\u2126, \u03D5 \u22A2</div> <div class="rule__border-top"> <span>\u2126 \u22A2 \xAC\u03D5</span> <span class="rule__border-top__rule-name">(\xACr)</span> </div> </div>'},{rule:"gsk-tree-cl1",label:n.global.t("rules.conjunction.left.label1"),desc:`${n.global.t("rules.conjunction.left.title")} (\u2227l1)`,proof:' <div class="q-ma-sm rule"> <div>\u2126, \u03D5 \u22A2 \u03B8</div> <div class="rule__border-top"> <span>\u2126, \u03D5 \u2227 \u03C8 \u22A2 \u03B8</span> <span class="rule__border-top__rule-name">(\u2227l1)</span> </div> </div>'},{rule:"gsk-tree-cl2",label:n.global.t("rules.conjunction.left.label2"),desc:`${n.global.t("rules.conjunction.left.title")} (\u2227l2)`,proof:' <div class="q-ma-sm rule"> <div>\u2126, \u03C8 \u22A2 \u03B8</div> <div class="rule__border-top"> <span>\u2126, \u03D5 \u2227 \u03C8 \u22A2 \u03B8</span> <span class="rule__border-top__rule-name">(\u2227l2)</span> </div> </div>'},{rule:"gsk-tree-cr",label:n.global.t("rules.conjunction.right.label"),desc:`${n.global.t("rules.conjunction.right.title")} (\u2227r)`,proof:' <div class="q-ma-sm rule"> <div class="rule__siblings"> <div>\u2126 \u22A2 \u03D5</div> <div>\u2126 \u22A2 \u03C8</div> </div> <div class="rule__border-top"> <span>\u2126 \u22A2 \u03D5 \u2227 \u03C8</span> <span class="rule__border-top__rule-name">(\u2227r)</span> </div> </div>'},{rule:"gsk-tree-dl",label:n.global.t("rules.disjunction.left.label"),desc:`${n.global.t("rules.disjunction.left.title")} (\u2228l)`,proof:'  <div class="q-ma-sm rule"> <div class="rule__siblings"> <div>\u2126, \u03D5 \u22A2 \u03B8</div> <div>\u2126, \u03C8 \u22A2 \u03B8</div> </div> <div class="rule__border-top"> <span>\u2126, \u03D5 \u2228 \u03C8 \u22A2 \u03B8</span> <span class="rule__border-top__rule-name">(\u2228l)</span> </div> </div>'},{rule:"gsk-tree-dr1",label:n.global.t("rules.disjunction.right.label1"),desc:`${n.global.t("rules.disjunction.right.title")} (\u2228r1)`,proof:'<div class="q-ma-sm rule"> <div>\u2126 \u22A2 \u03D5</div> <div class="rule__border-top"> <span>\u2126 \u22A2 \u03D5 \u2228 \u03C8</span> <span class="rule__border-top__rule-name">(\u2228r1)</span> </div> </div>'},{rule:"gsk-tree-dr2",label:n.global.t("rules.disjunction.right.label2"),desc:`${n.global.t("rules.disjunction.right.title")} (\u2228r2)`,proof:'<div class="q-ma-sm rule"> <div>\u2126 \u22A2 \u03C8</div> <div class="rule__border-top"> <span>\u2126 \u22A2 \u03D5 \u2228 \u03C8</span> <span class="rule__border-top__rule-name">(\u2228r2)</span> </div> </div>'},{rule:"gsk-tree-il",label:n.global.t("rules.implication.left.label"),desc:`${n.global.t("rules.implication.left.title")} (\u21D2l)`,proof:' <div class="q-ma-sm rule"> <div class="rule__siblings"> <div>\u2126 \u22A2 \u03D5</div> <div>\u2126, \u03C8 \u22A2 \u03B8</div> </div> <div class="rule__border-top"> <span>\u2126, \u03D5 \u21D2 \u03C8 \u22A2 \u03B8</span> <span class="rule__border-top__rule-name">(\u21D2l)</span> </div> </div>'},{rule:"gsk-tree-ir",label:n.global.t("rules.implication.right.label"),desc:`${n.global.t("rules.implication.right.title")} (\u21D2r)`,proof:'  <div class="q-ma-sm rule"> <div>\u2126, \u03D5 \u22A2 \u03C8</div> <div class="rule__border-top"> <span>\u2126 \u22A2 \u03D5 \u21D2 \u03C8</span> <span class="rule__border-top__rule-name">(\u21D2r)</span> </div> </div>'},{rule:"gsk-tree-wl",label:n.global.t("rules.weakening.left.label"),desc:`${n.global.t("rules.weakening.left.title")} (wl)`,proof:' <div class="q-ma-sm rule"> <div>\u2126 \u22A2 \u03B8</div> <div class="rule__border-top"> <span>\u2126, \u03D5 \u22A2 \u03B8</span> <span class="rule__border-top__rule-name">(wl)</span> </div> </div>'},{rule:"gsk-tree-col",label:n.global.t("rules.contraction.left.label"),desc:`${n.global.t("rules.contraction.left.title")} (cl)`,proof:'<div class="q-ma-sm rule"> <div>\u2126, \u03D5, \u03D5 \u22A2 \u03B8</div> <div class="rule__border-top"> <span>\u2126, \u03D5 \u22A2 \u03B8 </span> <span class="rule__border-top__rule-name">(cl)</span> </div> </div>'},{rule:"gsk-tree-cut",label:n.global.t("rules.cut.label"),desc:`${n.global.t("rules.cut.title")} (cut)`,proof:'<div class="q-ma-sm rule"> <div class="rule__siblings"> <div><span toReplace1>\u2126, \u039B \u22A2 \u03C8, </span><span toInput>\u03D5</span></div> <div><span toInput>\u03D5</span><span toReplace>\u2126, \u039B \u22A2 \u03C8</span></div> </div> <div class="rule__border-top"> <span><span toReplace>\u2126, \u039B \u22A2 \u03C8</span></span> <span class="rule__border-top__rule-name">(cut)</span> </div> </div>'},{rule:"gsk-tree-exl",label:n.global.t("rules.exchange.left.label"),desc:`${n.global.t("rules.exchange.left.title")} (exl)`,proof:' <div class="q-ma-sm rule"> <div>\u2126, \u03D5, \u03C8 \u22A2 \u03B8</div> <div class="rule__border-top"> <span>\u2126, \u03C8, \u03D5 \u22A2 \u03B8</span> <span class="rule__border-top__rule-name">(exl)</span> </div> </div>'}],$l={class:"text-h6 q-mb-md"},kl={class:"text-body1"},Il={class:"text-body1"},wl={class:"text-body1"},xl=["innerHTML"],Fl={class:"text-body1"},Cl={class:"text-body1"},El=["innerHTML"],Sl={__name:"IL-sequentCalculus-tree-rules",setup(s){const l=pe(),t=w(""),e=w(!1),a=w(""),r=w(""),i=w([]),h=w(""),$=w(void 0),L=w(""),T=w(null),R=w(null),M=w(!1),D=w(!1),Q=w(!1),K=w(!1);async function se(d){e.value=!0,t.value=d.label;let c=await g();if(!c){b();return}let p,y,H;if(d.value=="gsk-tree-cut"){if(p=await o(c,d.tree),p==!1){b(),P.create({type:"negative",message:n.global.t("messages.invalidInput")+d.label+"."});return}}else if(d.value=="gsk-tree-exl"||d.value=="gsk-tree-exr"){if(y=await f(c,d),y==!1){b();return}}else if(H=await F(c,d.value),!Number.isInteger(H)||H===!1){b();return}const U=new N.Parser(N.Grammar.fromCompiled(ee)),W=await gl(d.value,c,U.feed(c.replace(" ","")).results[0],H,p,y);Array.isArray(W)?(P.create({type:"positive",message:n.global.t("messages.rule")+d.label+n.global.t("messages.applyed")+c+"."}),l.setSameLeaves(l.getLeaves.length!=new Set(l.getLeaves).size),l.addToHistory(),l.spliceLeaves(c),l.addFormulaToProof(l.proof,W),G.set("il-proof",l.getProof),W[1].forEach(ae=>{ae!=""&&l.pushLeaf(ae)}),G.set("il-leaves",l.getLeaves),l.resetSameLeaves()):P.create({type:"negative",message:n.global.t("messages.rule")+d.label+n.global.t("messages.notApplyed")+c+"."}),b()}function b(){a.value="",r.value="",h.value="",e.value=!1}function g(){const d=l.getLeaves;return d.length>1?(M.value=!0,new Promise((c,p)=>{const y=Y([a,e],([H,U])=>{H!==""&&(M.value=!1,c(H),y()),U==!1&&(M.value=!1,c(!1),y())})})):d[0]}function F(d,c){let p;return c.split("-")[2].includes("r")?p=d.split("\u22A2")[1]:p=d.split("\u22A2")[0],p.includes(",")?(D.value=!0,i.value=[],p.split(",").filter(y=>y!="").forEach((y,H)=>{i.value.push({value:H,label:y})}),a.value==""&&(a.value=l.getLeaves[0]),new Promise((y,H)=>{const U=Y([r,e],([W,ae])=>{W!==""&&(D.value=!1,y(W.value),U()),ae==!1&&(D.value=!1,y(!1),U())})})):0}function m(d,c,p){return d.replace(/<span toReplace1>(.*?)<\/span>/g,c.slice(0,c.indexOf("\u22A2")+1)).replace(/<span toReplace>(.*?)<\/span>/g,c).replace(/<span toInput>(.*?)<\/span>/g,`<span class="rule__input">${p}</span>`).replace(/<span toDelete>(.*?)<\/span>/g,"")}async function o(d,c){Q.value=!0,L.value=m(c,d,""),Y(h,y=>{L.value=m(c,d,y.length>1?`(${y})`:y)});const p=await new Promise((y,H)=>{const U=Y($,W=>{W&&($.value=void 0,Q.value=!1,y(h.value),U()),W==!1&&($.value=void 0,Q.value=!1,y(!1),U())})});if(p){const y=new N.Parser(N.Grammar.fromCompiled(ee));try{y.feed(p.replace(" ",""))}catch{return P.create({type:"negative",message:n.global.t("messages.formulaIsNotOK")}),!1}return p}else return!1}function f(d,c){let p=d.split("\u22A2")[0];return p=p.split(",").filter(y=>y!=""),p.length<2?(P.create({type:"negative",message:n.global.t("messages.nothingToExchange")+c.label+"."}),!1):(p=p.map(y=>({label:y,disable:!1})),i.value=[],i.value=p,new Promise((y,H)=>{K.value=!0;const U=Y([T,R,e],([W,ae,$e])=>{if(W&&ae){const ke={first:W.label,second:ae.label};T.value=null,R.value=null,K.value=!1,y(ke),U()}$e==!1&&(T.value=null,R.value=null,K.value=!1,y(!1),U())})}))}function V(d){const c=new N.Parser(N.Grammar.fromCompiled(ee));try{if(c.feed(d.replace(" ","")),c.results.length===0)throw new Error("Formula is not valid.")}catch{return!1}return c.results}return(d,c)=>(x(),Z("div",null,[_("div",$l,I(d.$t("rules.scTree")),1),M.value?(x(),S(ie,{key:0,class:"my-card q-my-lg"},{default:v(()=>[u(A,null,{default:v(()=>[_("p",kl,[j(I(d.$t("rules.chooseLeaf"))+" ",1),_("strong",null,I(t.value),1),j(". ")])]),_:1}),u(A,null,{default:v(()=>[u(oe,{modelValue:a.value,"onUpdate:modelValue":c[0]||(c[0]=p=>a.value=p),options:k(l).getLeaves,label:d.$t("rules.leaves")},null,8,["modelValue","options","label"])]),_:1}),u(ne,{align:"right"},{default:v(()=>[u(E,{label:d.$t("labels.cancel"),onClick:c[1]||(c[1]=p=>e.value=!1)},null,8,["label"])]),_:1})]),_:1})):q("",!0),D.value?(x(),S(ie,{key:1,class:"my-card q-my-lg"},{default:v(()=>[u(A,null,{default:v(()=>[_("p",Il,[j(I(d.$t("rules.chooseFormula"))+" ",1),_("strong",null,I(a.value),1),j(" "+I(d.$t("rules.chooseFormulaFor"))+" ",1),_("strong",null,I(t.value),1),j(". ")])]),_:1}),u(A,null,{default:v(()=>[u(oe,{modelValue:r.value,"onUpdate:modelValue":c[2]||(c[2]=p=>r.value=p),options:i.value,"option-label":p=>p.label,label:`${d.$t("rules.formulasInLeaf")} ${a.value}`},null,8,["modelValue","options","option-label","label"])]),_:1}),u(ne,{align:"right"},{default:v(()=>[u(E,{label:d.$t("labels.cancel"),onClick:c[3]||(c[3]=p=>e.value=!1)},null,8,["label"])]),_:1})]),_:1})):q("",!0),Q.value?(x(),S(ie,{key:2,class:"my-card q-my-lg"},{default:v(()=>[u(A,null,{default:v(()=>[_("p",wl,[j(I(d.$t("inputFormula"))+" ",1),_("strong",null,I(t.value),1),j(". ")])]),_:1}),u(A,null,{default:v(()=>[_("div",{innerHTML:L.value},null,8,xl)]),_:1}),u(A,null,{default:v(()=>[u(ce,{modelValue:h.value,"onUpdate:modelValue":c[4]||(c[4]=p=>h.value=p),validateFormula:V},null,8,["modelValue"])]),_:1}),u(ne,{align:"right"},{default:v(()=>[u(E,{label:d.$t("labels.cancel"),onClick:c[5]||(c[5]=()=>{$.value=!1,e.value=!1})},null,8,["label"]),u(E,{label:d.$t("labels.use"),onClick:c[6]||(c[6]=p=>$.value=!0)},null,8,["label"])]),_:1})]),_:1})):q("",!0),K.value?(x(),S(ie,{key:3,class:"my-card q-my-lg"},{default:v(()=>[u(A,null,{default:v(()=>{var p,y;return[_("p",Fl,[j(I(d.$t("rules.chooseFormula"))+" ",1),_("strong",null,I(a.value),1),j(" "+I(d.$t("rules.chooseFormulaFor"))+" ",1),_("strong",null,I(t.value),1),j(". ")]),_("p",Cl,I(d.$t("rules.formula"))+" "+I(((p=T.value)==null?void 0:p.label)||"__")+" "+I(d.$t("rules.exchang"))+" "+I(((y=R.value)==null?void 0:y.label)||"__")+". ",1)]}),_:1}),u(A,null,{default:v(()=>[u(oe,{modelValue:T.value,"onUpdate:modelValue":[c[7]||(c[7]=p=>T.value=p),c[8]||(c[8]=p=>{i.value.forEach(y=>y.disable=!1),p.disable=!0})],options:i.value,label:`${d.$t("rules.formulasInLeaf")} ${a.value}`},null,8,["modelValue","options","label"]),u(oe,{modelValue:R.value,"onUpdate:modelValue":c[9]||(c[9]=p=>R.value=p),options:i.value,label:`${d.$t("rules.formulasInLeaf")} ${a.value}`},null,8,["modelValue","options","label"])]),_:1}),u(ne,{align:"right"},{default:v(()=>[u(E,{label:d.$t("labels.cancel"),onClick:c[10]||(c[10]=p=>e.value=!1)},null,8,["label"])]),_:1})]),_:1})):q("",!0),u(be,{class:"q-mx-auto",style:{height:"600px","max-width":"500px"}},{default:v(()=>[u(ge,{bordered:"",separator:"",style:{"border-radius":"4px"}},{default:v(()=>[(x(!0),Z(ue,null,de(k(_l),p=>fe((x(),S(he,{key:p.rule,clickable:"",class:"q-py-md",onClick:y=>se({value:p.rule,label:p.label,tree:p.proof}),disable:!k(l).isProving||e.value},{default:v(()=>[u(ye,{top:""},{default:v(()=>[u(me,{class:"text-body1 text-primary"},{default:v(()=>[j(I(p.desc),1)]),_:2},1024),_("div",{class:"flex",innerHTML:p.proof},null,8,El)]),_:2},1024)]),_:2},1032,["onClick","disable"])),[[ve]])),128))]),_:1})]),_:1})]))}},jl=[{rule:"nd-tree-vi",label:n.global.t("rules.verum.intro.label"),desc:`${n.global.t("rules.verum.intro.title")} (\u22A4I)`,proof:' <div class="q-ma-sm rule"> <div class="rule__border-top"> <span>\u22A4</span> <span class="rule__border-top__rule-name">(\u22A4I)</span> </div> </div>'},{rule:"nd-tree-ae",label:n.global.t("rules.absurdum.elimination.label"),desc:`${n.global.t("rules.absurdum.elimination.title")} (\u22A5E)`,proof:' <div class="q-ma-sm rule"> <div>\u22A5</div> <div class="rule__border-top"> <span>\u03D5</span> <span class="rule__border-top__rule-name">(\u22A5E)</span> </div> </div>'},{rule:"nd-tree-ne",label:n.global.t("rules.negation.elimination.label"),desc:`${n.global.t("rules.negation.elimination.title")}} (\xACE)`,proof:'<div class="q-ma-sm rule"> <div class="rule__siblings"> <div><span toInput>\u03D5</span></div> <div>\xAC<span toInput>\u03D5</span></div> </div> <div class="rule__border-top"> <span>\u22A5</span> <span class="rule__border-top__rule-name">(\xACE)</span> </div> </div>'},{rule:"nd-tree-ci",label:n.global.t("rules.conjunction.intro.label"),desc:`${n.global.t("rules.conjunction.intro.title")} (\u2227I)`,proof:' <div class="q-ma-sm rule"> <div class="rule__siblings"> <div>\u03C8</div> <div>\u03D5</div> </div> <div class="rule__border-top"> <span>\u03D5 \u2227 \u03C8</span> <span class="rule__border-top__rule-name">(\u2227I)</span> </div> </div>'},{rule:"nd-tree-ce1",label:n.global.t("rules.conjunction.elimination.label1"),desc:`${n.global.t("rules.conjunction.elimination.title")} (\u2227E1)`,proof:' <div class="q-ma-sm rule"> <div><span toReplace>\u03D5</span> \u2227 <span toInput>\u03C8</span></div> <div class="rule__border-top"> <span><span toReplace>\u03D5</span></span> <span class="rule__border-top__rule-name">(\u2227E1)</span> </div> </div>'},{rule:"nd-tree-ce2",label:n.global.t("rules.conjunction.elimination.label2"),desc:`${n.global.t("rules.conjunction.elimination.title")} (\u2227E2)`,proof:' <div class="q-ma-sm rule"> <div><span toInput>\u03C8</span> \u2227 <span toReplace>\u03D5</span></div> <div class="rule__border-top"> <span><span toReplace>\u03D5</span></span> <span class="rule__border-top__rule-name">(\u2227E2)</span> </div> </div>'},{rule:"nd-tree-di1",label:n.global.t("rules.disjunction.intro.label1"),desc:`${n.global.t("rules.disjunction.intro.title")} (\u2228I1)`,proof:' <div class="q-ma-sm rule"> <div>\u03D5</div> <div class="rule__border-top"> <span>\u03D5 \u2228 \u03C8</span> <span class="rule__border-top__rule-name">(\u2228I1)</span> </div> </div>'},{rule:"nd-tree-di2",label:n.global.t("rules.disjunction.intro.label2"),desc:`${n.global.t("rules.disjunction.intro.title")} (\u2228I2)`,proof:' <div class="q-ma-sm rule"> <div>\u03C8</div> <div class="rule__border-top"> <span>\u03D5 \u2228 \u03C8 </span> <span class="rule__border-top__rule-name">(\u2228I2)</span> </div> </div>'},{rule:"nd-tree-de",label:n.global.t("rules.disjunction.elimination.label"),desc:`${n.global.t("rules.disjunction.elimination.title")} (\u2228E)`,proof:' <div class="q-ma-sm rule"> <div class="rule__siblings"> <div><span toInput>\u03D5 \u2228 \u03C8</span></div> <div class="rule__hypo"> <div>[<span toDelete>\u03D5</span>]</div> <div class="rule__hypo__dots"> <span>.</span> <span>.</span> <span>.</span> </div> <span toReplace>\u03B8</span> </div> <div class="rule__hypo"> <div>[<span toDelete>\u03C8</span>]</div> <div class="rule__hypo__dots"> <span>.</span> <span>.</span> <span>.</span> </div> <span toReplace>\u03B8</span> </div> </div> <div class="rule__border-top"> <span><span toReplace>\u03B8</span></span> <span class="rule__border-top__rule-name">(\u2228E)</span> </div> </div>'},{rule:"nd-tree-ii",label:n.global.t("rules.implication.intro.label"),desc:`${n.global.t("rules.implication.intro.title")} (\u21D2I)`,proof:'<div class="q-ma-sm rule"> <div class="rule__hypo"> <div>[\u03D5]</div> <div class="rule__hypo__dots"> <span>.</span> <span>.</span> <span>.</span> </div> \u03C8 </div> <div class="rule__border-top"> <span>\u03D5 \u21D2 \u03C8</span> <span class="rule__border-top__rule-name">(\u21D2I)</span> </div> </div>'},{rule:"nd-tree-ie",label:n.global.t("rules.implication.intro.label"),desc:`${n.global.t("rules.implication.elimination.title")} (\u21D2E)`,proof:' <div class="q-ma-sm rule"> <div class="rule__siblings"> <div><span toInput>\u03D5</span></div> <div><span toInput>\u03D5</span> \u21D2 <span toReplace>\u03C8</span></div> </div> <div class="rule__border-top"> <span><span toReplace>\u03C8</span></span> <span class="rule__border-top__rule-name">(\u21D2E)</span> </div> </div>'}],Ll={class:"text-h6 q-mb-md"},ql={class:"text-body1"},Nl={class:"text-body1"},Rl=["innerHTML"],Al=["innerHTML"],Pl={__name:"IL-naturalDeduction-tree-rules",setup(s){const l=pe(),t=w(""),e=w(!1),a=w(""),r=w(!1),i=w(!1),h=w(void 0),$=w(""),L=w(""),T=["nd-tree-ne","nd-tree-ce1","nd-tree-ce2","nd-tree-de","nd-tree-ie"];async function R(b){e.value=!0,t.value=b.label;let g=await D();if(!g){M();return}let F;if(T.includes(b.value)&&(F=await K(g,b.tree,b.value),!F)){M(),P.create({type:"negative",message:n.global.t("messages.invalidInput")+b.label+"."});return}const m=new N.Parser(N.Grammar.fromCompiled(ee)),o=await hl(b.value,g,m.feed(g.replace(" ","")).results[0],F);if(Array.isArray(o)){if(P.create({type:"positive",message:n.global.t("messages.rule")+b.label+n.global.t("messages.applyed")+g+"."}),o[3]){let f=l.getHypotesis.length,V=[];for(let d=0;d<o[3].length;d++)V.push(String.fromCharCode("a".charCodeAt(0)+f)),f++;o[2]=`${o[2]}${V.join(",")}`}l.setSameLeaves(l.getLeaves.length!=new Set(l.getLeaves).size),l.addToHistory(),l.spliceLeaves(g),o[3]&&(l.addHypotesis(o[3]),G.set("il-hypo",l.getHypotesis)),o[1].forEach(f=>{var c;let V=l.checkHypotesis(f,o[0]),d=(c=o[3])==null?void 0:c.includes(f);d&&(l.hypotesis=l.hypotesis.map(p=>p.hypo==f?{hypo:p.hypo,used:!0}:p)),f!=""&&!(V||d)&&l.pushLeaf(f)}),G.set("il-leaves",l.getLeaves),G.set("il-hypo",l.getHypotesis),l.addFormulaToProof(l.proof,o),G.set("il-proof",l.getProof),l.resetSameLeaves()}else P.create({type:"negative",message:n.global.t("messages.rule")+b.label+n.global.t("messages.notApplyed")+g+"."});M()}function M(){a.value="",$.value="",e.value=!1}function D(){const b=l.getLeaves;return b.length>1?(r.value=!0,new Promise((g,F)=>{const m=Y([a,e],([o,f])=>{o!==""&&(r.value=!1,g(o),m()),f==!1&&(r.value=!1,g(!1),m())})})):b[0]}function Q(b,g,F){return b.replace(/<span toReplace>(.*?)<\/span>/g,g).replace(/<span toInput>(.*?)<\/span>/g,`<span class="rule__input">${F}</span>`).replace(/<span toDelete>(.*?)<\/span>/g,"")}async function K(b,g,F){i.value=!0;const m=b.length>1?`(${b})`:b;L.value=Q(g,m,F=="nd-tree-de"?"\u2228":""),Y($,f=>{L.value=Q(g,m,f.length>1?`(${f})`:f)});const o=await new Promise((f,V)=>{const d=Y(h,c=>{c&&(h.value=void 0,i.value=!1,f($.value),d()),c==!1&&(h.value=void 0,i.value=!1,f(!1),d())})});if(o&&!o.includes(",")){const f=new N.Parser(N.Grammar.fromCompiled(ee));try{f.feed(o.replace(" ",""))}catch{return P.create({type:"negative",message:n.global.t("messages.formulaIsNotOK")}),!1}return{asString:o,asAst:f.results[0]}}else return o!=!1&&P.create({type:"negative",message:n.global.t("messages.formulaIsNotOK")}),!1}function se(b){const g=new N.Parser(N.Grammar.fromCompiled(ee));try{if(g.feed(b.replace(" ","")),g.results.length===0)throw new Error("Formula is not valid.")}catch{return!1}return g.results}return(b,g)=>(x(),Z("div",null,[_("div",Ll,I(b.$t("rules.ndTree")),1),r.value?(x(),S(ie,{key:0,class:"my-card q-my-lg"},{default:v(()=>[u(A,null,{default:v(()=>[_("p",ql,[j(I(b.$t("rules.chooseLeaf"))+" ",1),_("strong",null,I(t.value),1),j(". ")])]),_:1}),u(A,null,{default:v(()=>[u(oe,{modelValue:a.value,"onUpdate:modelValue":g[0]||(g[0]=F=>a.value=F),options:k(l).getLeaves,label:b.$t("rules.leaves")},null,8,["modelValue","options","label"])]),_:1}),u(ne,{align:"right"},{default:v(()=>[u(E,{label:b.$t("labels.cancel"),onClick:g[1]||(g[1]=F=>e.value=!1)},null,8,["label"])]),_:1})]),_:1})):q("",!0),i.value?(x(),S(ie,{key:1,class:"my-card q-my-lg"},{default:v(()=>[u(A,null,{default:v(()=>[_("p",Nl,[j(I(b.$t("rules.inputFormula"))+" ",1),_("strong",null,I(t.value),1),j(". ")])]),_:1}),u(A,null,{default:v(()=>[_("div",{innerHTML:L.value},null,8,Rl)]),_:1}),u(A,null,{default:v(()=>[u(ce,{modelValue:$.value,"onUpdate:modelValue":g[2]||(g[2]=F=>$.value=F),validateFormula:se},null,8,["modelValue"])]),_:1}),u(ne,{align:"right"},{default:v(()=>[u(E,{label:b.$t("labels.cancel"),onClick:g[3]||(g[3]=()=>{e.value=!1,h.value=!1})},null,8,["label"]),u(E,{label:b.$t("labels.use"),onClick:g[4]||(g[4]=F=>h.value=!0)},null,8,["label"])]),_:1})]),_:1})):q("",!0),u(be,{class:"q-mx-auto",style:{height:"600px","max-width":"500px"}},{default:v(()=>[u(ge,{bordered:"",separator:"",style:{"border-radius":"4px"}},{default:v(()=>[(x(!0),Z(ue,null,de(k(jl),F=>fe((x(),S(he,{key:F.rule,clickable:"",class:"q-py-md",onClick:m=>R({value:F.rule,label:F.label,tree:F.proof}),disable:!k(l).isProving||e.value},{default:v(()=>[u(ye,{top:""},{default:v(()=>[u(me,{class:"text-body1 text-primary"},{default:v(()=>[j(I(F.desc),1)]),_:2},1024),_("div",{class:"flex",innerHTML:F.proof},null,8,Al)]),_:2},1024)]),_:2},1032,["onClick","disable"])),[[ve]])),128))]),_:1})]),_:1})]))}},Vl=[{rule:"nd-fitch-as",label:n.global.t("rules.assumption.label"),desc:`${n.global.t("rules.assumption.title")}`,proof:'<div class="q-ma-sm fitch-proof"> <!-- formulas --> <div> <div> <span class="fitch-index"></span> <div class="fitch-spacer"> <div class="fitch-formula fitch-as">\u03C6</div> </div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula"></div> </div> </div> <!-- rule --> <div> <div class="fitch-rule--as"></div> </div> </div>'},{rule:"nd-fitch-ae1",label:n.global.t("rules.absurdum.elimination.label1"),desc:`${n.global.t("rules.absurdum.elimination.title")} (\u22A5E1, m)`,proof:'<div class="q-ma-sm fitch-proof"> <!-- formulas --> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u22A5</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C6</div> </div> </div> <!-- rule --> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u22A5E1, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-ne",label:n.global.t("rules.negation.elimination.label"),desc:`${n.global.t("rules.negation.elimination.title")} (\xACE, m, n)`,proof:'<div class="q-ma-sm fitch-proof"> <!-- formulas --> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\xAC\u03C6</div> </div> <div> <span class="fitch-index">n</span> <div class="fitch-formula">\u03C6</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u22A5</div> </div> </div> <!-- rule --> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\xACE, m, n</div> </div> </div>',forInput:{mask:/^(\d+,\d+)$/,placeholder:"#,#"}},{rule:"nd-fitch-ci",label:n.global.t("rules.conjunction.intro.label"),desc:`${n.global.t("rules.conjunction.intro.title")} (\u2227I, m, n)`,proof:'    <div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6</div> </div> <div> <span class="fitch-index">n</span> <div class="fitch-formula">\u03C8</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C6\u2227\u03C8</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2227I, m, n</div> </div> </div>',forInput:{mask:/^(\d+,\d+)$/,placeholder:"#,#"}},{rule:"nd-fitch-ce1",label:n.global.t("rules.conjunction.elimination.label1"),desc:`${n.global.t("rules.conjunction.elimination.title")} (\u2227E1, m)`,proof:' <div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6\u2227\u03C8</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C6</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2227E1, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-ce2",label:n.global.t("rules.conjunction.elimination.label2"),desc:`${n.global.t("rules.conjunction.elimination.title")} (\u2227E2, m)`,proof:'<div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6\u2227\u03C8</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C8</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2227E2, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-di1",label:n.global.t("rules.disjunction.intro.label1"),desc:`${n.global.t("rules.disjunction.intro.title")} (\u2228I1, m)`,proof:'  <div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C6\u2228\u03C8</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2228I1, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-di2",label:n.global.t("rules.disjunction.intro.label2"),desc:`${n.global.t("rules.disjunction.intro.title")} (\u2228I2, m)`,proof:'<div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C8</div> </div> <div> <span class="fitch-index"> </span> <div class="fitch-formula">\u03C6\u2228\u03C8</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2228I2, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-de",label:n.global.t("rules.disjunction.elimination.label"),desc:`${n.global.t("rules.disjunction.elimination.title")} (\u2228E, m, i-j, k-l)`,proof:'   <div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6\u2228\u03C8</div> </div> <div> <span class="fitch-index">i</span> <div class="fitch-spacer"> <div class="fitch-formula fitch-as">\u03C6</div> </div> </div> <div> <span class="fitch-index">j</span> <div class="fitch-spacer"> <div class="fitch-formula">\u03D5</div> </div> </div> <div> <span class="fitch-index">k</span> <div class="fitch-spacer"> <div class="fitch-formula fitch-as">\u03C8</div> </div> </div> <div> <span class="fitch-index">l</span> <div class="fitch-spacer"> <div class="fitch-formula">\u03D5</div> </div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03D5</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule--as">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule--as">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2228E, m, i-j, k-l</div> </div> </div>',forInput:{mask:/^(\d+,(\d+-\d+),(\d+-\d+))$/,placeholder:"#,#,#"}},{rule:"nd-fitch-ii",label:n.global.t("rules.implication.intro.label"),desc:`${n.global.t("rules.implication.intro.title")} (\u21D2I, m-n)`,proof:'<div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-spacer"> <div class="fitch-formula fitch-as">\u03C6</div> </div> </div> <div> <span class="fitch-index">n</span> <div class="fitch-spacer"> <div class="fitch-formula">\u03C8</div> </div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C6\u21D2\u03C8</div> </div> </div> <div> <div class="fitch-rule--as">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u21D2I, m-n</div> </div> </div>',forInput:{mask:/^(\d+-\d+)$/,placeholder:"#-#"}},{rule:"nd-fitch-ie",label:n.global.t("rules.implication.elimination.label"),desc:`${n.global.t("rules.implication.elimination.title")} (\u21D2E, m, n)`,proof:'  <div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6\u21D2\u03C8</div> </div> <div> <span class="fitch-index">n</span> <div class="fitch-formula">\u03C6</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C8</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u21D2E, m, n</div> </div> </div>',forInput:{mask:/^(\d+,\d+)$/,placeholder:"#,#"}}],Tl={class:"text-h6 q-mb-md"},Ol={class:"text-body1"},Ml={class:"fitch-keyboard"},Dl=["innerHTML"],Hl={__name:"IL-naturalDeduction-fitch-rules",setup(s){const l=pe(),t=w(""),e=w(!1),a=["nd-fitch-as","nd-fitch-ae1","nd-fitch-di1","nd-fitch-di2"],r=w(!1),i=w(void 0),h=w(""),$=w(""),L=w(void 0),T=w(""),R=w();async function M(m,o){e.value=!0,t.value=m,L.value=o==null?void 0:o.mask,T.value=o==null?void 0:o.placeholder;let f=await K();if(f==!1){D();return}if(!Q(f)){D(),P.create({type:"negative",message:n.global.t("messages.invalidInput")+m.label+"."});return}const V=await yl(m.value,f.formula,f.rows,JSON.parse(JSON.stringify(l.proof)));V?(P.create({type:"positive",message:n.global.t("messages.rule")+m.label+n.global.t("messages.applyedFitch")}),l.addToHistory(),l.addRowToProof(V),G.set("pl-proof",l.getProof)):P.create({type:"negative",message:n.global.t("messages.rule")+m.label+n.global.t("messages.notApplyedFitch")}),D()}function D(){e.value=!1,t.value="",h.value="",$.value="",L.value=void 0}function Q(m){return a.includes(t.value.value)&&m.formula==""?!1:t.value.value=="nd-fitch-as"&&m.formula!=""?!0:!(m.rows==""||m.rows==null)}async function K(){r.value=!0;const m=await new Promise((o,f)=>{const V=Y(i,d=>{d&&(i.value=void 0,r.value=!1,o({formula:h.value,rows:$.value}),V()),d==!1&&(i.value=void 0,r.value=!1,o(!1),V())})});if(m&&!m.formula.includes(",")){const o=new N.Parser(N.Grammar.fromCompiled(ee));try{o.feed(m.formula.replace(" ",""))}catch{return P.create({type:"negative",message:n.global.t("messages.formulaIsNotOK")}),!1}return{formula:m.formula,rows:m.rows}}else return m!=!1&&P.create({type:"negative",message:n.global.t("messages.formulaIsNotOK")}),!1}function se(m){const o=new N.Parser(N.Grammar.fromCompiled(ee));try{if(o.feed(m.replace(" ","")),o.results.length===0)throw new Error("Formula is not valid.")}catch{return!1}return o.results}function b(m){m.preventDefault()}function g(m){const o=R.value.nativeEl.selectionStart;$.value=$.value.slice(0,o)+m+$.value.slice(o),setTimeout(()=>{document.getElementById(R.value.nativeEl.id).setSelectionRange(o+1,o+1)},1)}function F(){const m=R.value.nativeEl.selectionStart;$.value=$.value.slice(0,m-1)+$.value.slice(m),setTimeout(()=>{document.getElementById(R.value.nativeEl.id).setSelectionRange(m-1,m-1)},1)}return(m,o)=>(x(),Z(ue,null,[_("div",Tl,I(m.$t("rules.ndFitch")),1),r.value?(x(),S(ie,{key:0,class:"my-card q-my-lg"},{default:v(()=>[u(A,null,{default:v(()=>[_("p",Ol,[j(I(m.$t("rules.inputFormulaFitch"))+" ",1),_("strong",null,I(t.value.label),1),j(". ")])]),_:1}),a.includes(t.value.value)?(x(),S(A,{key:0},{default:v(()=>[u(ce,{modelValue:h.value,"onUpdate:modelValue":o[0]||(o[0]=f=>h.value=f),validateFormula:se},null,8,["modelValue"])]),_:1})):q("",!0),L.value?(x(),S(A,{key:1},{default:v(()=>[u(je,{class:"ls-formula-i",outlined:"",clearable:"",autogrow:"",spellcheck:"false",modelValue:$.value,"onUpdate:modelValue":o[1]||(o[1]=f=>$.value=f),ref_key:"rowsInputElm",ref:R,label:m.$t("logic.chooseRows")+" ("+T.value+")",rules:[f=>L.value.test(f)||m.$t("logic.badRowFormat")]},null,8,["modelValue","label","rules"]),_("div",Ml,[u(E,{outline:"",onClick:o[2]||(o[2]=f=>g("1")),onMousedown:b,label:"1"}),u(E,{outline:"",onClick:o[3]||(o[3]=f=>g("2")),onMousedown:b,label:"2"}),u(E,{outline:"",onClick:o[4]||(o[4]=f=>g("3")),onMousedown:b,label:"3"}),u(E,{outline:"",onClick:o[5]||(o[5]=f=>g("4")),onMousedown:b,label:"4"}),u(E,{outline:"",onClick:o[6]||(o[6]=f=>g("5")),onMousedown:b,label:"5"}),u(E,{outline:"",onClick:o[7]||(o[7]=f=>g("6")),onMousedown:b,label:"6"}),u(E,{outline:"",onClick:o[8]||(o[8]=f=>g("-")),onMousedown:b,label:"-",class:"fitch-keyboard__double"}),u(E,{outline:"",onClick:o[9]||(o[9]=f=>g(",")),onMousedown:b,label:",",class:"fitch-keyboard__double"}),u(E,{class:"fitch-keyboard__remove fitch-keyboard__double",outline:"",onClick:o[10]||(o[10]=f=>F()),onMousedown:b,label:"\u2190"})])]),_:1})):q("",!0),u(ne,{align:"right"},{default:v(()=>[u(E,{label:m.$t("labels.cancel"),onClick:o[11]||(o[11]=()=>{e.value=!1,i.value=!1})},null,8,["label"]),u(E,{label:m.$t("labels.use"),onClick:o[12]||(o[12]=f=>i.value=!0)},null,8,["label"])]),_:1})]),_:1})):q("",!0),u(be,{class:"q-mx-auto",style:{height:"600px","max-width":"500px"}},{default:v(()=>[u(ge,{bordered:"",separator:"",style:{"border-radius":"4px"}},{default:v(()=>[(x(!0),Z(ue,null,de(k(Vl),f=>fe((x(),S(he,{key:f.rule,clickable:"",class:"q-py-md",onClick:V=>M({value:f.rule,label:f.label},f.forInput),disable:!k(l).isProving||e.value},{default:v(()=>[u(ye,{top:""},{default:v(()=>[u(me,{class:"text-body1 text-primary"},{default:v(()=>[j(I(f.desc),1)]),_:2},1024),_("div",{class:"flex",innerHTML:f.proof},null,8,Dl)]),_:2},1024)]),_:2},1032,["onClick","disable"])),[[ve]])),128))]),_:1})]),_:1})],64))}},Ql={class:"q-my-sm text-center"},Ul={class:"container"},Wl={class:"row justify-center items-stretch gap"},Gl={class:"col-md-7 col-sm-12"},Bl={class:"flex justify-end gap back-button q-my-md"},Kl={key:1},zl={class:"text-h6 q-my-md"},Jl={class:"flex gap"},Xl={class:"col-md-4 col-sm-12"},cs={__name:"IntuitionisticLogic",setup(s){const l=pe();function t(){return _e(l.getInputFormula,l.getMethod)}function e(){let a=_e(l.getInputFormula,l.getMethod);a&&(l.clearTree(),l.getMethod=="ND"&&a.hypothesis&&(l.getNotation=="tree"?(a.hypothesis[0]!=""&&(l.addHypotesis(a.hypothesis),G.set("il-hypo",l.getHypotesis)),a=a.formula):a.hypothesis.forEach(r=>{l.addRowToProof({depth:1,formula:r,rule:"AS"})})),l.getNotation=="tree"?(l.setProof(a),G.set("il-proof",l.getProof),l.pushLeaf(a),G.set("il-leaves",l.getLeaves)):(l.setFitchProoving(),G.set("il-fitch",l.getConclusion)),G.set("il-formula",l.getInputFormula),P.create({type:"positive",message:n.global.t("messages.formulaIsOK")}))}return(a,r)=>(x(),S(Se,{style:{"min-height":"100%"}},{default:v(()=>{var i;return[_("h6",Ql,I(a.$t("labels.intuitionistic")),1),_("div",Ul,[_("div",Wl,[_("div",Gl,[u(ce,{modelValue:k(l).inputFormula,"onUpdate:modelValue":r[0]||(r[0]=h=>k(l).inputFormula=h),validateFormula:t,submit:e},null,8,["modelValue"]),_("div",Bl,[k(l).isProving||k(l).isProven?(x(),S(E,{key:0,outline:"",label:a.$t("labels.remove"),onClick:r[1]||(r[1]=h=>k(l).clearTree())},null,8,["label"])):q("",!0),k(l).history.length?(x(),S(E,{key:1,outline:"",label:a.$t("labels.back"),onClick:r[2]||(r[2]=h=>k(l).retrieveFromHistory())},null,8,["label"])):q("",!0)]),k(l).isProven?(x(),S(we,{key:0,class:"bg-positive q-mx-xl q-my-md text-white",rounded:""},{avatar:v(()=>[u(Ie,{name:"check",color:"white"})]),default:v(()=>[j(" "+I(a.$t("messages.isProven")),1)]),_:1})):q("",!0),k(l).getMethod=="ND"&&((i=k(l).getHypotesis)==null?void 0:i.length)>0&&k(l).getHypotesis!="undefined"?(x(),Z("div",Kl,[_("div",zl,I(a.$t("labels.hypos")),1),_("div",Jl,[(x(!0),Z(ue,null,de(k(l).getHypotesis,(h,$)=>(x(),Z("div",{key:h.hypo},[_("span",null,I(String.fromCharCode("a".charCodeAt(0)+$))+":",1),u(Ee,{label:h.hypo,dense:"",outline:"",square:"",color:h.used?"positive":"primary",size:"lg"},null,8,["label","color"])]))),128))])])):q("",!0),k(l).getNotation=="tree"?(x(),S(xe,{key:2,proof:k(l).getProof},null,8,["proof"])):q("",!0),k(l).getNotation=="fitch"?(x(),S(Fe,{key:3,proof:k(l).getProof,conclusion:k(l).getConclusion},null,8,["proof","conclusion"])):q("",!0)]),_("div",Xl,[u(Ce,{logic:"il","onUpdate:method":k(l).setMethod,"onUpdate:notation":k(l).setNotation},null,8,["onUpdate:method","onUpdate:notation"]),k(l).getMethod=="GSK"&&k(l).getNotation=="tree"?(x(),S(Sl,{key:0})):q("",!0),k(l).getMethod=="ND"&&k(l).getNotation=="tree"?(x(),S(Pl,{key:1})):q("",!0),k(l).getMethod=="ND"&&k(l).getNotation=="fitch"?(x(),S(Hl,{key:2})):q("",!0)])])])]}),_:1}))}};export{cs as default};
