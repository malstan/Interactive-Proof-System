import{r as h,N as w,O as pe,a0 as y,$ as _,V as S,R as b,j as f,_ as j,U as I,W as A,au as R,F as $e,S as _e,z as we,av as qe,aw as C,P as ee,w as se,I as Le}from"./index.7a9aee17.js";import{Q as Pe}from"./rtl.c3a50cee.js";import{Q as ye,a as Ee,b as Fe,_ as Re,c as Te,d as Ve,e as Oe}from"./QScrollArea.102c494b.js";import{Q as Me}from"./QPage.5bb437e5.js";import{_ as be}from"./FormulaInput.084e72ff.js";import{F as xe}from"./firstOrderLogicStore.29b6c833.js";import{n as q,Q as Ue}from"./nearley.9879b3e6.js";import{i as n}from"./index.1dc78791.js";import{Q as L,a as de,b as ce}from"./QCard.c624f0a0.js";import{d as Ae,e as je,f as Se}from"./QMenu.9f96130d.js";import"./use-dark.5477e6d4.js";import"./position-engine.b7c92e96.js";import"./touch.47903efd.js";var re={Lexer:void 0,ParserRules:[{name:"expression",symbols:[{literal:"\u22A2"},"formula"]},{name:"expression",symbols:["formula",{literal:"\u22A2"},"formula"]},{name:"expression",symbols:["formula",{literal:"\u22A2"}]},{name:"expression",symbols:["formula"],postprocess:P},{name:"formula",symbols:["constant"],postprocess:P},{name:"formula",symbols:["predicate"],postprocess:P},{name:"formula",symbols:["statement"],postprocess:P},{name:"formulaForQ",symbols:["constant"],postprocess:P},{name:"formulaForQ",symbols:["predicate"],postprocess:P},{name:"formulaForQ",symbols:["implication"],postprocess:P},{name:"statement",symbols:["implication"],postprocess:P},{name:"statement$ebnf$1$subexpression$1",symbols:[{literal:","},"implication"]},{name:"statement$ebnf$1",symbols:["statement$ebnf$1$subexpression$1"]},{name:"statement$ebnf$1$subexpression$2",symbols:[{literal:","},"implication"]},{name:"statement$ebnf$1",symbols:["statement$ebnf$1","statement$ebnf$1$subexpression$2"],postprocess:function(e){return e[0].concat([e[1]])}},{name:"statement",symbols:["implication","statement$ebnf$1"],postprocess:De},{name:"implication",symbols:["disjunction",{literal:"\u21D2"},"implication"]},{name:"implication",symbols:["disjunction"],postprocess:P},{name:"disjunction",symbols:["conjunction",{literal:"\u2228"},"disjunction"]},{name:"disjunction",symbols:["conjunction"],postprocess:P},{name:"conjunction",symbols:["negation",{literal:"\u2227"},"conjunction"]},{name:"conjunction",symbols:["negation"],postprocess:P},{name:"negation",symbols:[{literal:"\xAC"},"quantificatorE"]},{name:"negation",symbols:["quantificatorE"],postprocess:P},{name:"quantificatorE$string$1",symbols:[{literal:"("},{literal:"\u2203"}],postprocess:function(e){return e.join("")}},{name:"quantificatorE",symbols:["quantificatorE$string$1","variable",{literal:")"},"formulaForQ"],postprocess:Ce},{name:"quantificatorE",symbols:["quantificatorV"],postprocess:P},{name:"quantificatorV$string$1",symbols:[{literal:"("},{literal:"\u2200"}],postprocess:function(e){return e.join("")}},{name:"quantificatorV",symbols:["quantificatorV$string$1","variable",{literal:")"},"formulaForQ"],postprocess:Ce},{name:"quantificatorV",symbols:["predicate"],postprocess:P},{name:"predicate$ebnf$1",symbols:[]},{name:"predicate$ebnf$1$subexpression$1",symbols:[{literal:","},"term"]},{name:"predicate$ebnf$1",symbols:["predicate$ebnf$1","predicate$ebnf$1$subexpression$1"],postprocess:function(e){return e[0].concat([e[1]])}},{name:"predicate",symbols:[/[A-Z]/,{literal:"("},"term","predicate$ebnf$1",{literal:")"}],postprocess:We},{name:"predicate",symbols:["constant"],postprocess:P},{name:"constant",symbols:[{literal:"\u22A5"}],postprocess:P},{name:"constant",symbols:[{literal:"\u22A4"}],postprocess:P},{name:"constant",symbols:["single"],postprocess:P},{name:"single",symbols:[/[α-ωΑ-Ω]/],postprocess:P},{name:"single",symbols:[{literal:"("},"formula",{literal:")"}]},{name:"term",symbols:["variable"],postprocess:P},{name:"term",symbols:["function"]},{name:"function$ebnf$1",symbols:[]},{name:"function$ebnf$1$subexpression$1",symbols:[{literal:","},"term"]},{name:"function$ebnf$1",symbols:["function$ebnf$1","function$ebnf$1$subexpression$1"],postprocess:function(e){return e[0].concat([e[1]])}},{name:"function",symbols:[/[a-z]/,{literal:"("},"term","function$ebnf$1",{literal:")"}],postprocess:He},{name:"variable",symbols:[/[a-z]/],postprocess:P}],ParserStart:"expression"};function P(s){return s[0]}function Ce(s){return[s[0]+s[1]+")",s[3]]}function De(s){const e=s[1].map(a=>a.filter(l=>l!=","));return s.pop(),e.forEach(a=>a.length>1?s.push(a):s.push(a[0])),s}function He(s){return[s[0]+"(",[...s[2],...s[3].map(e=>e[1])],")"]}function We(s){return[s[0]+"(",[...s[2],...s[3].map(e=>e[1])],")"]}const Ge=[{name:"gsk-tree-id",apply:ze},{name:"gsk-tree-uqr",apply:Be},{name:"gsk-tree-uql",apply:Ke},{name:"gsk-tree-eqr",apply:Ze},{name:"gsk-tree-eql",apply:Je},{name:"gsk-tree-nr",apply:Xe},{name:"gsk-tree-nl",apply:Ye},{name:"gsk-tree-cr",apply:el},{name:"gsk-tree-cl1",apply:ll},{name:"gsk-tree-cl2",apply:sl},{name:"gsk-tree-dr1",apply:al},{name:"gsk-tree-dr2",apply:tl},{name:"gsk-tree-dl",apply:nl},{name:"gsk-tree-ir",apply:il},{name:"gsk-tree-il",apply:rl},{name:"gsk-tree-wr",apply:ol},{name:"gsk-tree-wl",apply:ul},{name:"gsk-tree-cor",apply:dl},{name:"gsk-tree-col",apply:cl},{name:"gsk-tree-cut",apply:pl},{name:"gsk-tree-exr",apply:fl},{name:"gsk-tree-exl",apply:vl}];function x(s){s[0]=="("&&s[2]==")"&&(s=s[1]);const e=a=>Array.isArray(a)?Array.isArray(a[0])?a.flatMap(e).join(""):a[0]=="\xAC"?`${a[0]}${e(a[1])}`:a[0].match(/[A-Z]\(/g)||a[0].match(/[a-z]\(/g)?`${a[0]}${a[1].flatMap(e).join(",").replaceAll("(,","(").replaceAll(",)",")")}${a[2]}`:a.length==2&&Array.isArray(a[1])?`${a[0]}${a[1].flatMap(e).join("")}${a[2]!=null?a[2]:""}`:a.flatMap(e).join(""):a.toString();return e(s)}function ae(s,e){return s[s.length-1]==="\u22A2"?`${s}${e}`:`${s},${e}`}function te(s,e){if(s[0]==="\u22A2")return`${e}${s}`;{let a=s.split("\u22A2");return`${a[0]},${e}\u22A2${a[1]}`}}function H(s){s[0]===","&&(s=s.slice(1));let e=s.indexOf("\u22A2");return s[e-1]===","&&(s=s.slice(0,e-1)+s.slice(e),e--),s[e+1]===","&&(s=s.slice(0,e+1)+s.slice(e+2)),s[s.length-1]===","&&(s=s.slice(0,-1)),s=s.replace(/,,/g,","),s}function M(s){return!(s.includes("\xAC")||s.includes("\u2227")||s.includes("\u2228")||s.includes("\u21D2")||s[0].includes("\u2200")||s[0].includes("\u2203"))}function ze(s,e,a){const l=e[e.indexOf("\u22A2")-1],t=e[e.indexOf("\u22A2")+1];if(l==null||t==null||!M(s.replaceAll("\xAC","0")))return s;let r="";const i=v=>Array.isArray(v)?v.length==1?v[0]:`${v[0]}${v[1].map(i).join(",").replaceAll("(,","(").replaceAll(",)",")")}${v[2]}`:v;return(l[0].match(/[A-Z]\(/g)||l[0].match(/[a-z]\(/g))&&a==0?r=i(l):!Array.isArray(l)&&a==0?r=l:r=l.map(x)[a],s.split("\u22A2").every(v=>v.includes(r))?[s,[""],"(id)"]:s}function Be(s,e,a,l,t,r){let i=e[e.indexOf("\u22A2")+1];if(i===void 0)return s;if(M(i)&&(i=i[a]),i!==null&&i[0].includes("\u2200")&&r.length==1){const v=i[0][2];let g=x(i[1]);g=g.replaceAll(v,r),i=x(i);let $=s.replace(i,"");return $=H($),[s,[ae($,g)],"(\u2200r)"]}else return s}function Ke(s,e,a,l,t,r){let i=e[e.indexOf("\u22A2")-1];if(i===void 0)return s;if(M(i)&&(i=i[a]),i!==null&&i[0].includes("\u2200")&&r.length>0){const v=i[0][2];let g=x(i[1]);g=g.replaceAll(v,r),i=x(i);let $=s.replace(i,"");return $=H($),[s,[te($,g)],"(\u2200l)"]}else return s}function Ze(s,e,a,l,t,r){let i=e[e.indexOf("\u22A2")+1];if(i===void 0)return s;if(M(i)&&(i=i[a]),i!==null&&i[0].includes("\u2203")&&r.length>0){const v=i[0][2];let g=x(i[1]);g=g.replaceAll(v,r),i=x(i);let $=s.replace(i,"");return $=H($),console.log($),[s,[ae($,g)],"(\u2203r)"]}else return s}function Je(s,e,a,l,t,r){let i=e[e.indexOf("\u22A2")-1];if(i===void 0)return s;if(M(i)&&(i=i[a]),i!==null&&i[0].includes("\u2203")&&r.length>0){const v=i[0][2];let g=x(i[1]);g=g.replaceAll(v,r),i=x(i);let $=s.replace(i,"");return $=H($),[s,[te($,g)],"(\u2203l)"]}else return s}function Xe(s,e,a){let l=e[e.indexOf("\u22A2")+1];if(l===void 0)return s;if(M(l)&&(l=l[a]),l!==null&&l.includes("\xAC")){l=x(l);let t=s.replace(l,"");return l=l.replace("\xAC",""),t=H(t),[s,[te(t,l)],"(\xACr)"]}else return s}function Ye(s,e,a){let l=e[e.indexOf("\u22A2")-1];if(l===void 0)return s;if(M(l)&&(l=l[a]),l!==null&&l.includes("\xAC")){l=x(l);let t=s.replace(l,"");return l=l.replace("\xAC",""),t=H(t),[s,[ae(t,l)],"(\xACl)"]}else return s}function el(s,e,a){let l=e[e.indexOf("\u22A2")+1];if(l===void 0)return s;if(M(l)&&(l=l[a]),l!==null&&l.includes("\u2227")){let t=l[0],r=l[2];l=x(l);let i=s.replace(l,"");return i=H(i),[s,[ae(i,x(t)),ae(i,x(r))],"(\u2227r)"]}else return s}function ll(s,e,a){let l=e[e.indexOf("\u22A2")-1];if(l===void 0)return s;if(M(l)&&(l=l[a]),l!==null&&l.includes("\u2227")){let t=l[0];l=x(l);let r=s.replace(l,"");return r=H(r),[s,[te(r,x(t))],"(\u2227l1)"]}else return s}function sl(s,e,a){let l=e[e.indexOf("\u22A2")-1];if(l===void 0)return s;if(M(l)&&(l=l[a]),l!==null&&l.includes("\u2227")){let t=l[2];l=x(l);let r=s.replace(l,"");return r=H(r),[s,[te(r,x(t))],"(\u2227l2)"]}else return s}function al(s,e,a){let l=e[e.indexOf("\u22A2")+1];if(l===void 0)return s;if(M(l)&&(l=l[a]),l!==null&&l.includes("\u2228")){let t=l[0];l=x(l);let r=s.replace(l,"");return r=H(r),[s,[ae(r,x(t))],"(\u2228r1)"]}else return s}function tl(s,e,a){let l=e[e.indexOf("\u22A2")+1];if(l===void 0)return s;if(M(l)&&(l=l[a]),l!==null&&l.includes("\u2228")){let t=l[2];l=x(l);let r=s.replace(l,"");return r=H(r),[s,[ae(r,x(t))],"(\u2228r2)"]}else return s}function nl(s,e,a){let l=e[e.indexOf("\u22A2")-1];if(l===void 0)return s;if(M(l)&&(l=l[a]),l!==null&&l.includes("\u2228")){let t=l[0],r=l[2];l=x(l);let i=s.replace(l,"");return i=H(i),[s,[te(i,x(t)),te(i,x(r))],"(\u2228l)"]}else return s}function il(s,e,a){let l=e[e.indexOf("\u22A2")+1];if(l===void 0)return s;if(M(l)&&(l=l[a]),l!==null&&l.includes("\u21D2")){let t=l[0],r=l[2];l=x(l);let i=s.replace(l,"");return i=H(i),[s,[te(ae(i,x(r)),x(t))],"(\u21D2r)"]}else return s}function rl(s,e,a){let l=e[e.indexOf("\u22A2")-1];if(l===void 0)return s;if(M(l)&&(l=l[a]),l!==null&&l.includes("\u21D2")){let t=l[0],r=l[2];l=x(l);let i=s.replace(l,"");return i=H(i),[s,[ae(i,x(t)),te(i,x(r))],"(\u21D2l)"]}else return s}function ol(s,e,a){let l=e[e.indexOf("\u22A2")+1];if(l===void 0)return s;if(M(l)&&(l=l[a]),l!==null){l=x(l);let t=s.replace(l,"");return t=H(t),[s,[t],"(wr)"]}else return s}function ul(s,e,a){let l=e[e.indexOf("\u22A2")-1];if(l===void 0)return s;if(M(l)&&(l=l[a]),l!==null){l=x(l);let t=s.replace(l,"");return t=H(t),[s,[t],"(wl)"]}else return s}function dl(s,e,a){let l=e[e.indexOf("\u22A2")+1];return l===void 0?s:(M(l)&&(l=l[a]),l!==null?(l=x(l),[s,[ae(s,x(l))],"(cr)"]):s)}function cl(s,e,a){let l=e[e.indexOf("\u22A2")-1];return l===void 0?s:(M(l)&&(l=l[a]),l!==null?(l=x(l),[s,[te(s,l)],"(cl)"]):s)}function pl(s,e,a,l){return l!==null?[s,[ae(s,l),te(s,l)],"(cut)"]:s}function fl(s,e,a,l,t){if(t.first&&t.second){let i=s.split("\u22A2")[0].split(","),v=i.indexOf(t.first),g=i.indexOf(t.second);i[v]=t.second,i[g]=t.first;let $=i.join(",")+s.slice(s.indexOf("\u22A2"));return[s,[$],"(exl)"]}else return s}function vl(s,e,a,l){if(l.first&&l.second){let r=s.split("\u22A2")[1].split(","),i=r.indexOf(l.first),v=r.indexOf(l.second);r[i]=l.second,r[v]=l.first;let g=s.slice(0,s.indexOf("\u22A2")+1)+r.join(",");return[s,[g],"(exr)"]}else return s}const ml=[{name:"nd-tree-uqi",apply:bl},{name:"nd-tree-uqe",apply:gl},{name:"nd-tree-eqi",apply:hl},{name:"nd-tree-eqe",apply:yl},{name:"nd-tree-vi",apply:$l},{name:"nd-tree-ae1",apply:_l},{name:"nd-tree-ae2",apply:xl},{name:"nd-tree-ni",apply:kl},{name:"nd-tree-ne",apply:Il},{name:"nd-tree-ci",apply:wl},{name:"nd-tree-ce1",apply:ql},{name:"nd-tree-ce2",apply:El},{name:"nd-tree-di1",apply:Fl},{name:"nd-tree-di2",apply:Al},{name:"nd-tree-de",apply:jl},{name:"nd-tree-ii",apply:Sl},{name:"nd-tree-ie",apply:Cl}];function B(s){s[0]=="("&&s[2]==")"&&(s=s[1]);const e=a=>Array.isArray(a)?Array.isArray(a[0])?a.flatMap(e).join(""):a[0]=="\xAC"?`${a[0]}${e(a[1])}`:a[0].match(/[A-Z]\(/g)||a[0].match(/[a-z]\(/g)?`${a[0]}${a[1].flatMap(e).join(",").replaceAll("(,","(").replaceAll(",)",")")}${a[2]}`:a.length==2&&Array.isArray(a[1])?`${a[0]}${a[1].flatMap(e).join("")}${a[2]!=null?a[2]:""}`:a.flatMap(e).join(""):a.toString();return e(s)}function fe(s,e){return e&&(e[0].match(/[A-Z]\(/g)||e[0].match(/[a-z]\(/g))?s:s.length>1?`(${s})`:s}function bl(s,e,a,l){if(e[0].includes("\u2200")){const t=e[0][2];let r=B(e[1]);return r=r.replaceAll(t,l),[s,[r],"(\u2200I)"]}else return s}function gl(s,e,a,l){let t="(\u2200x)";return t+=e[e.length-1]!=")"?"("+s.replaceAll(l,"x")+")":s.replaceAll(l,"x"),[s,[t],"(\u2200E)"]}function hl(s,e,a,l){if(e[0].includes("\u2203")){const t=e[0][2];let r=B(e[1]);return r=r.replaceAll(t,l),[s,[r],"(\u2203I)"]}else return s}function yl(s,e,a,l){return[s,[`(\u2203x)(${a.asString.replaceAll(l,"x")})`,s],"(\u2203E)",[a.asString]]}function $l(s,e){return s=="\u22A4"?[s,[],"(\u22A4I)"]:s}function _l(s,e){return[s,["\u22A5"],"(\u22A5E1)"]}function xl(s,e){return[s,["\u22A5"],"(\u22A5E2)",[`\xAC${fe(s)}`]]}function kl(s,e){return e.includes("\xAC")?[s,["\u22A5"],"(\xACI)",[B(e[1])]]:s}function Il(s,e,a){if(s=="\u22A5"){let l=a.asString,t=`\xAC${fe(a.asString)}`;return[s,[l,t],"(\xACE)"]}else return s}function wl(s,e){if(e.includes("\u2227")){let a=e[0],l=e[2];return[s,[B(a),B(l)],"(\u2227I)"]}else return s}function ql(s,e,a){let l=fe(B(e),e),t=fe(a.asString,a.asAst);return[s,[`${l}\u2227${t}`],"(\u2227E1)"]}function El(s,e,a){let l=fe(a.asString),t=fe(B(e));return[s,[`${l}\u2227${t}`],"(\u2227E2)"]}function Fl(s,e){if(e.includes("\u2228")){let a=e[0];return[s,[B(a)],"(\u2227I1)"]}else return s}function Al(s,e){if(e.includes("\u2228")){let a=e[2];return[s,[B(a)],"(\u2227I1)"]}else return s}function jl(s,e,a){return a.asAst.includes("\u2228")?[s,[a.asString,s,s],"(\u2228E)",[B(a.asAst[0]),B(a.asAst[2])]]:s}function Sl(s,e){if(e.includes("\u21D2")){let a=e[0],l=e[2];return[s,[B(l)],"(\u21D2I)",[B(a)]]}else return s}function Cl(s,e,a){return[s,[a.asString,`${fe(a.asString)}\u21D2${fe(B(e))}`],"(\u2227E2)"]}const Nl=[{name:"nd-fitch-uqi",apply:Ql},{name:"nd-fitch-uqe",apply:Ll},{name:"nd-fitch-eqi",apply:Pl},{name:"nd-fitch-eqe",apply:Rl},{name:"nd-fitch-as",apply:Tl},{name:"nd-fitch-ae1",apply:Vl},{name:"nd-fitch-ae2",apply:Ol},{name:"nd-fitch-ni",apply:Ml},{name:"nd-fitch-ne",apply:Ul},{name:"nd-fitch-ci",apply:Dl},{name:"nd-fitch-ce1",apply:Hl},{name:"nd-fitch-ce2",apply:Wl},{name:"nd-fitch-di1",apply:Gl},{name:"nd-fitch-di2",apply:zl},{name:"nd-fitch-de",apply:Bl},{name:"nd-fitch-ii",apply:Kl},{name:"nd-fitch-ie",apply:Zl}];function Z(s){return s.length>1?`(${s})`:s}function Ql(s,e,a,l){var r;if(isNaN(e))return!1;let t=(r=a[e-1])==null?void 0:r.formula;return t.includes("x")?!1:{formula:`(\u2200x)(${t.replace(l,"x")})`,rule:"(\u2200I)",depth:a[a.length-1].depth}}function Ll(s,e,a,l){var i;if(isNaN(e))return!1;let t=(i=a[e-1])==null?void 0:i.formula;if(!t.startsWith("(\u2200"))return!1;let r=t[2];return t=t.replace(`(\u2200${r})`,""),t=t.replace(r,l),{formula:t,rule:"(\u2200E)",depth:a[a.length-1].depth}}function Pl(s,e,a,l){var r;return isNaN(e)?!1:{formula:`(\u2203x)(${((r=a[e-1])==null?void 0:r.formula).replace(l,"x")})`,rule:"(\u2203I)",depth:a[a.length-1].depth}}function Rl(s,e,a,l){var i,v,g;let t=e.split(/[,-]/);if(t.some($=>isNaN($))||!((i=a[0])!=null&&i.formula.startsWith("(\u2203"))||((v=a[t[1]-1])==null?void 0:v.rule)!="AS")return!1;let r=(g=a[t[2]-1])==null?void 0:g.formula;return r.includes(l)?!1:{formula:r,rule:"(\u2203E)",depth:a[t[2]-1].depth-1}}function Tl(s,e,a){return{formula:s,rule:"AS",depth:a.length>0?a[a.length-1].depth+1:1}}function Vl(s,e,a){var l;return isNaN(e)||((l=a[e-1])==null?void 0:l.formula)!="\u22A5"?!1:{formula:s,rule:"\u22A5E1, "+e,depth:a[a.length-1].depth}}function Ol(s,e,a){var t,r,i,v;let l=e.split("-");return l.some(g=>isNaN(g))||((t=a[l[0]-1])==null?void 0:t.rule)!="AS"||((r=a[l[1]-1])==null?void 0:r.formula)!="\u22A5"||((i=a[l[0]-1])==null?void 0:i.depth)>((v=a[l[1]-1])==null?void 0:v.depth)?!1:{formula:a[l[0]-1].formula.substring(1),rule:"\u22A5E2, "+e,depth:a[l[1]-1].depth-1}}function Ml(s,e,a){var t,r,i,v;let l=e.split("-");return l.some(g=>isNaN(g))||((t=a[l[0]-1])==null?void 0:t.rule)!="AS"||((r=a[l[1]-1])==null?void 0:r.formula)!="\u22A5"||((i=a[l[0]-1])==null?void 0:i.depth)>((v=a[l[1]-1])==null?void 0:v.depth)?!1:{formula:`\xAC${Z(a[l[0]-1].formula)}`,rule:"\xACI, "+e,depth:0}}function Ul(s,e,a){var t,r,i,v;let l=e.split(",");return l.some(g=>isNaN(g))||((t=a[l[0]-1])==null?void 0:t.formula)!=`\xAC${Z((r=a[l[1]-1])==null?void 0:r.formula)}`||((i=a[l[0]-1])==null?void 0:i.depth)>((v=a[l[1]-1])==null?void 0:v.depth)?!1:{formula:"\u22A5",rule:"\xACE, "+e,depth:a[a.length-1].depth}}function Dl(s,e,a){var t,r;let l=e.split(",");return l.some(i=>isNaN(i))||((t=a[l[0]-1])==null?void 0:t.depth)>((r=a[l[1]-1])==null?void 0:r.depth)?!1:{formula:`${Z(a[l[0]-1].formula)}\u2227${Z(a[l[1]-1].formula)}`,rule:"\u2227I, "+e,depth:a[a.length-1].depth}}function Hl(s,e,a){var l;return isNaN(e)||!((l=a[e-1])!=null&&l.formula.includes("\u2227"))?!1:{formula:a[e-1].formula.split("\u2227")[0],rule:"\u2227E1, "+e,depth:a[a.length-1].depth}}function Wl(s,e,a){var l;return isNaN(e)||!((l=a[e-1])!=null&&l.formula.includes("\u2227"))?!1:{formula:a[e-1].formula.split("\u2227")[1],rule:"\u2227E2, "+e,depth:a[a.length-1].depth}}function Gl(s,e,a){var l;return isNaN(e)||!((l=a[e-1])!=null&&l.formula)?!1:{formula:`${Z(a[e-1].formula)}\u2228${Z(s)}`,rule:"\u2228I1, "+e,depth:a[a.length-1].depth}}function zl(s,e,a){var l;return isNaN(e)||!((l=a[e-1])!=null&&l.formula)?!1:{formula:`${Z(s)}\u2228${Z(a[e-1].formula)}`,rule:"\u2228I2, "+e,depth:a[a.length-1].depth}}function Bl(s,e,a){var t,r,i,v,g,$,N,D,W,T,z,K,G,le,J;let l=e.split(/[,-]/);return l.some(ve=>isNaN(ve))||((t=a[l[1]-1])==null?void 0:t.rule)!="AS"||((r=a[l[3]-1])==null?void 0:r.rule)!="AS"||((i=a[l[0]-1])==null?void 0:i.formula)!=`${Z((v=a[l[1]-1])==null?void 0:v.formula)}\u2228${Z((g=a[l[3]-1])==null?void 0:g.formula)}`||(($=a[l[2]])==null?void 0:$.formula)!=((N=a[l[4]])==null?void 0:N.formula)||((D=a[l[1]-1])==null?void 0:D.depth)>((W=a[l[2]-1])==null?void 0:W.depth)||((T=a[l[3]-1])==null?void 0:T.depth)>((z=a[l[4]-1])==null?void 0:z.depth)||((K=a[l[1]-1])==null?void 0:K.depth)!=((G=a[l[3]-1])==null?void 0:G.depth)||((le=a[l[1]-1])==null?void 0:le.depth)-1!=((J=a[l[0]-1])==null?void 0:J.depth)?!1:{formula:a[l[1]].formula,rule:"\u2228E, "+e,depth:a[l[0]-1].depth}}function Kl(s,e,a){var t,r,i;let l=e.split("-");return l.some(v=>isNaN(v))||((t=a[l[0]-1])==null?void 0:t.rule)!="AS"||((r=a[l[0]-1])==null?void 0:r.depth)>((i=a[l[1]-1])==null?void 0:i.depth)?!1:{formula:`${Z(a[l[0]-1].formula)}\u21D2${Z(a[l[1]-1].formula)}`,rule:"\u21D2I, "+e,depth:a[l[0]-1].depth-1}}function Zl(s,e,a){var r,i,v,g;let l=e.split(",");if(l.some($=>isNaN($)))return!1;let t=(r=a[l[0]-1])==null?void 0:r.formula.split("\u21D2");return t[0]!=Z((i=a[l[1]-1])==null?void 0:i.formula)||((v=a[l[0]-1])==null?void 0:v.depth)>((g=a[l[1]-1])==null?void 0:g.depth)?!1:{formula:t[1],rule:"\u21D2E, "+e,depth:a[a.length-1].depth}}function Ne(s,e){let a;e=="GSK"&&!s.includes("\u22A2")?a="\u22A2"+s:a=s,a=a.replaceAll(" ","");const l=new q.Parser(q.Grammar.fromCompiled(re));try{if(l.feed(a),l.results.length===0)throw new Error("Formula is not valid.");if(e=="ND"&&l.results[0].every(Array.isArray))throw new Error("Formula is not valid.")}catch{return!1}const t=l.results[0];if(e=="ND"&&a.includes("\u22A2"))return t[1]=="\u22A2"?t.length<3?!1:{hypothesis:t[0].every(Array.isArray)?t[0].map(Qe):[Qe(t[0])],formula:a.split("\u22A2")[1]}:a.split("\u22A2")[1];let r=t.indexOf("\u22A2");return(r==0&&t[1][0]=="("||r==1&&t[0][0]=="("||t[0]=="("&&t[2]==")")&&(a=a.replace("(","").replace(/\)(?=[^\)]*$)/,"")),a}function Jl(s,e,a,l,t,r,i){return Ge.find(v=>v.name==s).apply(e,a,l,t,r,i)}function Xl(s,e,a,l,t){return ml.find(r=>r.name==s).apply(e,a,l,t)}function Yl(s,e,a,l,t){return Nl.find(r=>r.name==s).apply(e,a,l,t)}function Qe(s){s[0]=="("&&s[2]==")"&&(s=s[1]);const e=a=>Array.isArray(a)?Array.isArray(a[0])?a.flatMap(e).join(""):a[0]=="\xAC"?`${a[0]}${e(a[1])}`:a[0].match(/[A-Z]\(/g)||a[0].match(/[a-z]\(/g)?`${a[0]}${a[1].flatMap(e).join(",").replaceAll("(,","(").replaceAll(",)",")")}${a[2]}`:a.length==2&&Array.isArray(a[1])?`${a[0]}${a[1].flatMap(e).join("")}${a[2]!=null?a[2]:""}`:a.flatMap(e).join(""):a.toString();return e(s)}var ge={Lexer:void 0,ParserRules:[{name:"term",symbols:["variable"],postprocess:Ie},{name:"term",symbols:["function"],postprocess:Ie},{name:"function$ebnf$1",symbols:[]},{name:"function$ebnf$1$subexpression$1",symbols:[{literal:","},"term"]},{name:"function$ebnf$1",symbols:["function$ebnf$1","function$ebnf$1$subexpression$1"],postprocess:function(e){return e[0].concat([e[1]])}},{name:"function",symbols:[/[a-z]/,{literal:"("},"term","function$ebnf$1",{literal:")"}],postprocess:es},{name:"variable",symbols:[/[a-z]/],postprocess:Ie}],ParserStart:"term"};function Ie(s){return s[0]}function es(s){return[s[0]+"(",[...s[2],...s[3].map(e=>e[1])],")"]}const ls=[{rule:"gsk-tree-id",label:n.global.t("rules.identity.label"),desc:`${n.global.t("rules.identity.title")} (id)`,proof:'<div class="q-ma-sm rule"> <div class="rule__border-top"> <span>\u2126, \u03D5 \u22A2 \u039B, \u03D5</span> <span class="rule__border-top__rule-name">(id)</span> </div> </div>'},{rule:"gsk-tree-uql",label:n.global.t("rules.universalQuantifier.left.label"),desc:`${n.global.t("rules.universalQuantifier.left.title")} (\u2200l)`,proof:'<div class="q-ma-sm rule"> <div>\u2126, \u03D5[t/x] \u22A2 \u039B</div> <div class="rule__border-top"> <span>\u2126, (\u2200x)\u03D5 \u22A2 \u039B</span> <span class="rule__border-top__rule-name">(\u2200l)</span> </div> </div>'},{rule:"gsk-tree-uqr",label:n.global.t("rules.universalQuantifier.right.label"),desc:`${n.global.t("rules.universalQuantifier.right.title")} (\u2200r)`,proof:'<div class="q-ma-sm rule"> <div>\u2126, \u22A2 \u03D5[y/x], \u039B</div> <div class="rule__border-top"> <span>\u2126, \u22A2 (\u2200x)\u03D5, \u039B</span> <span class="rule__border-top__rule-name">(\u2200r)</span> </div> </div>'},{rule:"gsk-tree-eql",label:n.global.t("rules.existentionalQuantifier.left.label"),desc:`${n.global.t("rules.existentionalQuantifier.left.title")} (\u2203l)`,proof:' <div class="q-ma-sm rule"> <div>\u2126, \u03D5[y/x] \u22A2 \u039B</div> <div class="rule__border-top"> <span>\u2126, (\u2203x)\u03D5 \u22A2 \u039B</span> <span class="rule__border-top__rule-name">(\u2203l)</span> </div> </div>'},{rule:"gsk-tree-eqr",label:n.global.t("rules.existentionalQuantifier.right.label"),desc:`${n.global.t("rules.existentionalQuantifier.right.title")} (\u2203r)`,proof:'<div class="q-ma-sm rule"> <div>\u2126, \u22A2 \u03D5[t/x], \u039B</div> <div class="rule__border-top"> <span>\u2126, \u22A2 (\u2203x)\u03D5, \u039B</span> <span class="rule__border-top__rule-name">(\u2203r)</span> </div> </div>'},{rule:"gsk-tree-nl",label:n.global.t("rules.negation.left.label"),desc:`${n.global.t("rules.negation.left.title")} (\xACl)`,proof:'<div class="q-ma-sm rule"> <div>\u2126 \u22A2 \u039B, \u03D5</div> <div class="rule__border-top"> <span>\u2126, \xAC\u03D5 \u22A2 \u039B</span> <span class="rule__border-top__rule-name">(\xACl)</span> </div> </div>'},{rule:"gsk-tree-nr",label:n.global.t("rules.negation.right.label"),desc:`${n.global.t("rules.negation.right.title")} (\xACr)`,proof:'<div class="q-ma-sm rule"> <div>\u2126, \u03D5 \u22A2 \u039B</div> <div class="rule__border-top"> <span>\u2126 \u22A2 \u039B, \xAC\u03D5</span> <span class="rule__border-top__rule-name">(\xACr)</span> </div> </div>'},{rule:"gsk-tree-cl1",label:n.global.t("rules.conjunction.left.label1"),desc:`${n.global.t("rules.conjunction.left.title")} (\u2227l1)`,proof:' <div class="q-ma-sm rule"> <div>\u2126, \u03D5 \u22A2 \u039B</div> <div class="rule__border-top"> <span>\u2126, \u03D5 \u2227 \u03C8 \u22A2 \u039B</span> <span class="rule__border-top__rule-name">(\u2227l1)</span> </div> </div>'},{rule:"gsk-tree-cl2",label:n.global.t("rules.conjunction.left.label2"),desc:`${n.global.t("rules.conjunction.left.title")} (\u2227l2)`,proof:'<div class="q-ma-sm rule"> <div>\u2126, \u03C8 \u22A2 \u039B</div> <div class="rule__border-top"> <span>\u2126, \u03D5 \u2227 \u03C8 \u22A2 \u039B</span> <span class="rule__border-top__rule-name">(\u2227l2)</span> </div> </div>'},{rule:"gsk-tree-cr",label:n.global.t("rules.conjunction.right.label"),desc:`${n.global.t("rules.conjunction.right.title")} (\u2227r)`,proof:' <div class="q-ma-sm rule"> <div class="rule__siblings"> <div>\u2126 \u22A2 \u039B, \u03D5</div> <div>\u2126 \u22A2 \u039B, \u03C8</div> </div> <div class="rule__border-top"> <span>\u2126 \u22A2 \u039B, \u03D5 \u2227 \u03C8</span> <span class="rule__border-top__rule-name">(\u2227r)</span> </div> </div>'},{rule:"gsk-tree-dl",label:n.global.t("rules.disjunction.left.label"),desc:`${n.global.t("rules.disjunction.left.title")} (\u2228l)`,proof:'     <div class="q-ma-sm rule"> <div class="rule__siblings"> <div>\u2126, \u03D5 \u22A2 \u039B</div> <div>\u2126, \u03C8 \u22A2 \u039B</div> </div> <div class="rule__border-top"> <span>\u2126, \u03D5 \u2228 \u03C8 \u22A2 \u039B</span> <span class="rule__border-top__rule-name">(\u2228l)</span> </div> </div>'},{rule:"gsk-tree-dr1",label:n.global.t("rules.disjunction.right.label1"),desc:`${n.global.t("rules.disjunction.right.title")} (\u2228r1)`,proof:' <div class="q-ma-sm rule"> <div>\u2126 \u22A2 \u039B, \u03D5</div> <div class="rule__border-top"> <span>\u2126 \u22A2 \u039B, \u03D5 \u2228 \u03C8</span> <span class="rule__border-top__rule-name">(\u2228r1)</span> </div> </div>'},{rule:"gsk-tree-dr2",label:n.global.t("rules.disjunction.right.label2"),desc:`${n.global.t("rules.disjunction.right.title")} (\u2228r2)`,proof:' <div class="q-ma-sm rule"> <div>\u2126 \u22A2 \u039B, \u03C8</div> <div class="rule__border-top"> <span>\u2126 \u22A2 \u039B, \u03D5 \u2228 \u03C8</span> <span class="rule__border-top__rule-name">(\u2228r2)</span> </div> </div>'},{rule:"gsk-tree-il",label:n.global.t("rules.implication.left.label"),desc:`${n.global.t("rules.implication.left.title")} (\u21D2l)`,proof:`<div class="q-ma-sm rule"> <div class="rule__siblings"> <div>\u2126 \u22A2 \u039B, \u03D5</div> <div>\u2126' , \u03C8 \u22A2 \u039B'</div> </div> <div class="rule__border-top"> <span>\u2126, \u2126' , \u03D5 \u21D2 \u03C8 \u22A2 \u039B, \u039B'</span> <span class="rule__border-top__rule-name">(\u21D2l)</span> </div> </div>`},{rule:"gsk-tree-ir",label:n.global.t("rules.implication.right.label"),desc:`${n.global.t("rules.implication.right.title")} (\u21D2r)`,proof:' <div class="q-ma-sm rule"> <div>\u2126, \u03D5 \u22A2 \u039B, \u03C8</div> <div class="rule__border-top"> <span>\u2126 \u22A2 \u039B, \u03D5 \u21D2 \u03C8</span> <span class="rule__border-top__rule-name">(\u21D2r)</span> </div> </div>'},{rule:"gsk-tree-wl",label:n.global.t("rules.weakening.left.label"),desc:`${n.global.t("rules.weakening.left.title")} (wl)`,proof:' <div class="q-ma-sm rule"> <div>\u2126 \u22A2 \u039B</div> <div class="rule__border-top"> <span>\u2126, \u03D5 \u22A2 \u039B</span> <span class="rule__border-top__rule-name">(wl)</span> </div> </div>'},{rule:"gsk-tree-wr",label:n.global.t("rules.weakening.right.label"),desc:`${n.global.t("rules.weakening.right.title")} (wr)`,proof:'  <div class="q-ma-sm rule"> <div>\u2126 \u22A2 \u039B</div> <div class="rule__border-top"> <span>\u2126 \u22A2 \u039B, \u03D5 </span> <span class="rule__border-top__rule-name">(wr)</span> </div> </div>'},{rule:"gsk-tree-col",label:n.global.t("rules.contraction.left.label"),desc:`${n.global.t("rules.contraction.left.title")} (cl)`,proof:'   <div class="q-ma-sm rule"> <div>\u2126, \u03D5, \u03D5 \u22A2 \u039B</div> <div class="rule__border-top"> <span>\u2126, \u03D5 \u22A2 \u039B </span> <span class="rule__border-top__rule-name">(cl)</span> </div> </div>'},{rule:"gsk-tree-cor",label:n.global.t("rules.contraction.right.label"),desc:`${n.global.t("rules.contraction.right.title")} (cr)`,proof:' <div class="q-ma-sm rule"> <div>\u2126 \u22A2 \u03D5, \u03D5,\u039B</div> <div class="rule__border-top"> <span>\u2126 \u22A2 \u03D5,\u039B</span> <span class="rule__border-top__rule-name">(cr)</span> </div> </div>'},{rule:"gsk-tree-cut",label:n.global.t("rules.cut.label"),desc:`${n.global.t("rules.cut.title")} (cut)`,proof:`<div class="q-ma-sm rule"> <div class="rule__siblings"> <div><span toReplace>\u2126 \u22A2 \u039B, </span> <span toInput>\u03D5</span></div> <div><span toInput>\u03D5</span> <span toReplace>\u2126', \u03D5 \u22A2 \u039B'</span></div> </div> <div class="rule__border-top"> <span toReplace>\u2126, \u2126' \u22A2 \u039B, \u039B'</span> <span class="rule__border-top__rule-name">(cut)</span> </div> </div>`},{rule:"gsk-tree-exl",label:n.global.t("rules.exchange.left.label"),desc:`${n.global.t("rules.exchange.left.title")} (exl)`,proof:' <div class="q-ma-sm rule"> <div>\u2126, \u03D5, \u03C8, \u2126 0 \u22A2 \u039B</div> <div class="rule__border-top"> <span>\u2126, \u03C8, \u03D5, \u2126 0 \u22A2 \u039B</span> <span class="rule__border-top__rule-name">(exl)</span> </div> </div>'},{rule:"gsk-tree-exr",label:n.global.t("rules.exchange.right.label"),desc:`${n.global.t("rules.exchange.right.title")} (exr)`,proof:' <div class="q-ma-sm rule"> <div>\u2126 \u22A2 \u039B, \u03D5, \u03C8,\u039B 0</div> <div class="rule__border-top"> <span>\u2126 \u22A2 \u039B, \u03C8, \u03D5,\u039B 0 </span> <span class="rule__border-top__rule-name">(exr)</span> </div> </div>'}],ss={class:"text-h6 q-mb-md"},as={class:"text-body1"},ts={class:"text-body1"},ns={class:"text-body1"},is=["innerHTML"],rs={class:"text-body1"},os={class:"text-body1"},us={class:"text-body1"},ds=["innerHTML"],cs={__name:"FOL-sequentCalculus-tree-rules",setup(s){const e=xe(),a=h(""),l=h(!1),t=h(""),r=h(""),i=h([]),v=h(""),g=h(void 0),$=h(""),N=h(null),D=h(null),W=h(""),T=h(void 0),z=h(!1),K=h(!1),G=h(!1),le=h(!1),J=h(!1);async function ve(p){l.value=!0,a.value=p.label;let c=await X();if(!c){V();return}let d,k,O,Q;if(p.value=="gsk-tree-cut"){if(d=await o(c,p.tree),d==!1){V(),C.create({type:"negative",message:n.global.t("messages.invalidInput")+p.label+"."});return}}else if(p.value=="gsk-tree-exl"||p.value=="gsk-tree-exr"){if(k=await m(c,p),k==!1){V();return}}else if(O=await he(c,p.value),!Number.isInteger(O)||O===!1){V();return}if(p.value.includes("q")){if(Q=await E(),Q==!1){V();return}if(p.value=="gsk-tree-uqr"||p.value=="gsk-tree-eql"){if(Q.length>1){C.create({type:"negative",message:n.global.t("messages.termIsNotOK")}),V();return}if(Y(c,Q)){C.create({type:"negative",message:n.global.t("messages.rule")+p.label+n.global.t("messages.notApplyed")+c+n.global.t("messages.notApplyedBonding")+"."}),V();return}}}const ie=new q.Parser(q.Grammar.fromCompiled(re)),ue=await Jl(p.value,c,ie.feed(c.replace(" ","")).results[0],O,d,k,Q);Array.isArray(ue)?(C.create({type:"positive",message:n.global.t("messages.rule")+p.label+n.global.t("messages.applyed")+c+"."}),e.setSameLeaves(e.getLeaves.length!=new Set(e.getLeaves).size),e.addToHistory(),e.spliceLeaves(c),e.addFormulaToProof(e.proof,ue),ee.set("fol-proof",e.getProof),ue[1].forEach(me=>{me!=""&&e.pushLeaf(me)}),ee.set("fol-leaves",e.getLeaves),e.resetSameLeaves()):C.create({type:"negative",message:n.global.t("messages.rule")+p.label+n.global.t("messages.notApplyed")+c+"."}),V()}function V(){t.value="",r.value="",v.value="",W.value="",l.value=!1}function X(){const p=e.getLeaves;return p.length>1?(z.value=!0,new Promise((c,d)=>{const k=se([t,l],([O,Q])=>{O!==""&&(z.value=!1,c(O),k()),Q==!1&&(z.value=!1,c(!1),k())})})):p[0]}function he(p,c){let d;if(c.split("-")[2].includes("r")?d=p.split("\u22A2")[1]:d=p.split("\u22A2")[0],d=="")return 0;let O=new q.Parser(q.Grammar.fromCompiled(re)).feed(d.replace(" ","")).results[0];return U(O)&&Array.isArray(O)?(K.value=!0,i.value=[],O.forEach((Q,ie)=>{i.value.push({value:ie,label:F(Q)})}),t.value==""&&(t.value=e.getLeaves[0]),new Promise((Q,ie)=>{const ue=se([r,l],([me,ke])=>{me!==""&&(K.value=!1,Q(me.value),ue()),ke==!1&&(K.value=!1,Q(!1),ue())})})):0}function u(p,c,d){return p.replace(/<span toReplace>(.*?)<\/span>/g,c).replace(/<span toInput>(.*?)<\/span>/g,`<span class="rule__input">${d}</span>`).replace(/<span toDelete>(.*?)<\/span>/g,"")}async function o(p,c){G.value=!0,$.value=u(c,p,""),se(v,k=>{$.value=u(c,p,k.length>1?`(${k})`:k)});const d=await new Promise((k,O)=>{const Q=se(g,ie=>{ie&&(g.value=void 0,G.value=!1,k(v.value),Q()),ie==!1&&(g.value=void 0,G.value=!1,k(!1),Q())})});if(d){const k=new q.Parser(q.Grammar.fromCompiled(re));try{k.feed(d.replace(" ",""))}catch{return C.create({type:"negative",message:n.global.t("messages.formulaIsNotOK")}),!1}return d}else return!1}function m(p,c){let d=c.value=="gsk-tree-exl"?p.split("\u22A2")[0]:p.split("\u22A2")[1];return d=d.split(",").filter(k=>k!=""),d.length<2?(C.create({type:"negative",message:n.global.t("messages.nothingToExchange")+c.label+"."}),!1):(d=d.map(k=>({label:k,disable:!1})),i.value=[],i.value=d,new Promise((k,O)=>{le.value=!0;const Q=se([N,D,l],([ie,ue,me])=>{if(ie&&ue){const ke={first:ie.label,second:ue.label};N.value=null,D.value=null,le.value=!1,k(ke),Q()}me==!1&&(N.value=null,D.value=null,le.value=!1,k(!1),Q())})}))}async function E(){J.value=!0;const p=await new Promise((c,d)=>{const k=se(T,O=>{O&&(T.value=void 0,J.value=!1,c(W.value),k()),O==!1&&(T.value=void 0,J.value=!1,c(!1),k())})});if(p){const c=new q.Parser(q.Grammar.fromCompiled(ge));try{c.feed(p.replace(" ",""))}catch{return C.create({type:"negative",message:n.global.t("messages.termIsNotOK")}),!1}return p}else return!1}function U(p){return!(p.includes("\xAC")||p.includes("\u2227")||p.includes("\u2228")||p.includes("\u21D2")||p[0].includes("\u2200")||p[0].includes("\u2203")||/^([A-Z]\()$/.test(p[0]))}function F(p){p[0]=="("&&p[2]==")"&&(p=p[1]);const c=d=>Array.isArray(d)?Array.isArray(d[0])?d.flatMap(c).join(""):d[0]=="\xAC"?`${d[0]}${c(d[1])}`:d[0].match(/[A-Z]\(/g)||d[0].match(/[a-z]\(/g)?`${d[0]}${d[1].flatMap(c).join(",").replaceAll("(,","(").replaceAll(",)",")")}${d[2]}`:d.length==2&&Array.isArray(d[1])?`${d[0]}${d[1].flatMap(c).join("")}${d[2]!=null?d[2]:""}`:d.flatMap(c).join(""):d.toString();return c(p)}function Y(p,c){let d=p.match(/[a-z]/g)||[],O=(p.match(/[a-z](?=\()/g)||[]).toString();return d=d.filter(Q=>!O.includes(Q)),p.match(new RegExp(`([\u2200\u2203])(${c})`,"g"))&&(d=d.filter(Q=>Q!=c)),d.includes(c)}function oe(p){const c=new q.Parser(q.Grammar.fromCompiled(re));try{if(c.feed(p.replace(" ","")),c.results.length===0)throw new Error("Formula is not valid.")}catch{return!1}return c.results}function ne(p){const c=new q.Parser(q.Grammar.fromCompiled(ge));try{if(c.feed(p.replace(" ","")),c.results.length===0)throw new Error("Term is not valid.")}catch{return!1}return c.results}return(p,c)=>(w(),pe("div",null,[y("div",ss,_(p.$t("rules.scTree")),1),z.value?(w(),S(ce,{key:0,class:"my-card q-my-lg"},{default:b(()=>[f(L,null,{default:b(()=>[y("p",as,[j(_(p.$t("rules.chooseLeaf"))+" ",1),y("strong",null,_(a.value),1),j(". ")])]),_:1}),f(L,null,{default:b(()=>[f(ye,{modelValue:t.value,"onUpdate:modelValue":c[0]||(c[0]=d=>t.value=d),options:I(e).getLeaves,label:p.$t("rules.leaves")},null,8,["modelValue","options","label"])]),_:1}),f(de,{align:"right"},{default:b(()=>[f(A,{label:p.$t("labels.cancel"),onClick:c[1]||(c[1]=d=>l.value=!1)},null,8,["label"])]),_:1})]),_:1})):R("",!0),K.value?(w(),S(ce,{key:1,class:"my-card q-my-lg"},{default:b(()=>[f(L,null,{default:b(()=>[y("p",ts,[j(_(p.$t("rules.chooseFormula"))+" ",1),y("strong",null,_(t.value),1),j(" "+_(p.$t("rules.chooseFormulaFor"))+" ",1),y("strong",null,_(a.value),1),j(". ")])]),_:1}),f(L,null,{default:b(()=>[f(ye,{modelValue:r.value,"onUpdate:modelValue":c[2]||(c[2]=d=>r.value=d),options:i.value,"option-label":d=>d.label,label:`${p.$t("rules.formulasInLeaf")} ${t.value}`},null,8,["modelValue","options","option-label","label"])]),_:1}),f(de,{align:"right"},{default:b(()=>[f(A,{label:p.$t("labels.cancel"),onClick:c[3]||(c[3]=d=>l.value=!1)},null,8,["label"])]),_:1})]),_:1})):R("",!0),G.value?(w(),S(ce,{key:2,class:"my-card q-my-lg"},{default:b(()=>[f(L,null,{default:b(()=>[y("p",ns,[j(_(p.$t("inputFormula"))+" ",1),y("strong",null,_(a.value),1),j(". ")])]),_:1}),f(L,null,{default:b(()=>[y("div",{innerHTML:$.value},null,8,is)]),_:1}),f(L,null,{default:b(()=>[f(be,{modelValue:v.value,"onUpdate:modelValue":c[4]||(c[4]=d=>v.value=d),validateFormula:oe},null,8,["modelValue"])]),_:1}),f(de,{align:"right"},{default:b(()=>[f(A,{label:p.$t("labels.cancel"),onClick:c[5]||(c[5]=()=>{g.value=!1,l.value=!1})},null,8,["label"]),f(A,{label:p.$t("labels.use"),onClick:c[6]||(c[6]=d=>g.value=!0)},null,8,["label"])]),_:1})]),_:1})):R("",!0),J.value?(w(),S(ce,{key:3,class:"my-card q-my-lg"},{default:b(()=>[f(L,null,{default:b(()=>[y("p",rs,[j(_(p.$t("rules.inputTerm"))+" ",1),y("strong",null,_(a.value),1),j(". ")])]),_:1}),f(L,null,{default:b(()=>[f(be,{modelValue:W.value,"onUpdate:modelValue":c[7]||(c[7]=d=>W.value=d),validateFormula:ne,term:!0},null,8,["modelValue"])]),_:1}),f(de,{align:"right"},{default:b(()=>[f(A,{label:p.$t("labels.cancel"),onClick:c[8]||(c[8]=()=>{T.value=!1,l.value=!1})},null,8,["label"]),f(A,{label:p.$t("labels.use"),onClick:c[9]||(c[9]=d=>T.value=!0)},null,8,["label"])]),_:1})]),_:1})):R("",!0),le.value?(w(),S(ce,{key:4,class:"my-card q-my-lg"},{default:b(()=>[f(L,null,{default:b(()=>{var d,k;return[y("p",os,[j(_(p.$t("rules.chooseFormula"))+" ",1),y("strong",null,_(t.value),1),j(" "+_(p.$t("rules.chooseFormulaFor"))+" ",1),y("strong",null,_(a.value),1),j(". ")]),y("p",us,_(p.$t("rules.formula"))+" "+_(((d=N.value)==null?void 0:d.label)||"__")+" "+_(p.$t("rules.exchang"))+" "+_(((k=D.value)==null?void 0:k.label)||"__")+". ",1)]}),_:1}),f(L,null,{default:b(()=>[f(ye,{modelValue:N.value,"onUpdate:modelValue":[c[10]||(c[10]=d=>N.value=d),c[11]||(c[11]=d=>{i.value.forEach(k=>k.disable=!1),d.disable=!0})],options:i.value,label:`${p.$t("rules.formulasInLeaf")} ${t.value}`},null,8,["modelValue","options","label"]),f(ye,{modelValue:D.value,"onUpdate:modelValue":c[12]||(c[12]=d=>D.value=d),options:i.value,label:`${p.$t("rules.formulasInLeaf")} ${t.value}`},null,8,["modelValue","options","label"])]),_:1}),f(de,{align:"right"},{default:b(()=>[f(A,{label:p.$t("labels.cancel"),onClick:c[13]||(c[13]=d=>l.value=!1)},null,8,["label"])]),_:1})]),_:1})):R("",!0),f(Fe,{class:"q-mx-auto",style:{height:"600px","max-width":"500px"}},{default:b(()=>[f(Ae,{bordered:"",separator:"",style:{"border-radius":"4px"}},{default:b(()=>[(w(!0),pe($e,null,_e(I(ls),d=>we((w(),S(je,{key:d.rule,clickable:"",class:"q-py-md",onClick:k=>ve({value:d.rule,label:d.label,tree:d.proof}),disable:!I(e).isProving||l.value},{default:b(()=>[f(Se,{top:""},{default:b(()=>[f(Ee,{class:"text-body1 text-primary"},{default:b(()=>[j(_(d.desc),1)]),_:2},1024),y("div",{class:"flex",innerHTML:d.proof},null,8,ds)]),_:2},1024)]),_:2},1032,["onClick","disable"])),[[qe]])),128))]),_:1})]),_:1})]))}},ps=[{rule:"nd-tree-uqi",label:n.global.t("rules.universalQuantifier.intro.label"),desc:`${n.global.t("rules.universalQuantifier.intro.title")} (\u2200I)`,proof:' <div class="q-ma-sm rule"> <div>\u03D5[t/x]</div> <div class="rule__border-top"> <span>(\u2200x)\u03D5</span> <span class="rule__border-top__rule-name">(\u2200I)</span> </div> </div>'},{rule:"nd-tree-uqe",label:n.global.t("rules.universalQuantifier.elimination.label"),desc:`${n.global.t("rules.universalQuantifier.elimination.title")} (\u2200E)`,proof:'  <div class="q-ma-sm rule"> <div>(\u2200x)\u03D5</div> <div class="rule__border-top"> <span>\u03D5[t/x]</span> <span class="rule__border-top__rule-name">(\u2200E)</span> </div> </div>'},{rule:"nd-tree-eqi",label:n.global.t("rules.existentionalQuantifier.intro.label"),desc:`${n.global.t("rules.existentionalQuantifier.intro.title")}} (\u2203I)`,proof:'<div class="q-ma-sm rule"> <div>\u03D5[t/x]</div> <div class="rule__border-top"> <span>(\u2203x)\u03D5</span> <span class="rule__border-top__rule-name">(\u2203I)</span> </div> </div>'},{rule:"nd-tree-eqe",label:n.global.t("rules.existentionalQuantifier.elimination.label"),desc:`${n.global.t("rules.existentionalQuantifier.elimination.title")} (\u2203E)`,proof:'<div class="q-ma-sm rule"> <div class="rule__siblings"> <div>(\u2203x)<span toInput>\u03D5</span></div> <div class="rule__hypo"> <div>[<span toDelete>\u03D5[t/x]</span>]</div> <div class="rule__hypo__dots"> <span>.</span> <span>.</span> <span>.</span> </div> <span toReplace>\u03C8</span> </div> </div> <div class="rule__border-top"> <span><span toReplace>\u03C8</span></span> <span class="rule__border-top__rule-name">(\u2203E)</span> </div> </div>'},{rule:"nd-tree-vi",label:n.global.t("rules.verum.intro.label"),desc:`${n.global.t("rules.verum.intro.title")} (\u22A4I)`,proof:'<div class="q-ma-sm rule"> <div class="rule__border-top"> <span>\u22A4</span> <span class="rule__border-top__rule-name">(\u22A4I)</span> </div> </div>'},{rule:"nd-tree-ae1",label:n.global.t("rules.absurdum.elimination.label1"),desc:`${n.global.t("rules.absurdum.elimination.title")} (\u22A5E1)`,proof:' <div class="q-ma-sm rule"> <div>\u22A5</div> <div class="rule__border-top"> <span>\u03D5</span> <span class="rule__border-top__rule-name">(\u22A5E1)</span> </div> </div>'},{rule:"nd-tree-ae2",label:n.global.t("rules.absurdum.elimination.label2"),desc:`${n.global.t("rules.absurdum.elimination.title")} (\u22A5E2)`,proof:'<div class="q-ma-sm rule"> <div class="rule__hypo"> <div>[\xAC\u03D5]</div> <div class="rule__hypo__dots"> <span>.</span> <span>.</span> <span>.</span> </div> </div> <div>\u22A5</div> <div class="rule__border-top"> <span>\u03D5</span> <span class="rule__border-top__rule-name">(\u22A5E2)</span> </div> </div>'},{rule:"nd-tree-ni",label:n.global.t("rules.negation.intro.label"),desc:`${n.global.t("rules.negation.intro.title")}} (\xACI)`,proof:'<div class="q-ma-sm rule"> <div class="rule__hypo"> <div>[\u03D5]</div> <div class="rule__hypo__dots"> <span>.</span> <span>.</span> <span>.</span> </div> </div> <div>\u22A5</div> <div class="rule__border-top"> <span>\xAC\u03D5</span> <span class="rule__border-top__rule-name">(\xACI)</span> </div> </div>'},{rule:"nd-tree-ne",label:n.global.t("rules.negation.elimination.label"),desc:`${n.global.t("rules.negation.elimination.title")} (\xACE)`,proof:'<div class="q-ma-sm rule"> <div class="rule__siblings"> <div><span toInput>\u03D5</span></div> <div>\xAC<span toInput>\u03D5</span></div> </div> <div class="rule__border-top"> <span>\u22A5</span> <span class="rule__border-top__rule-name">(\xACE)</span> </div> </div>'},{rule:"nd-tree-ci",label:n.global.t("rules.conjunction.intro.label"),desc:`${n.global.t("rules.conjunction.intro.title")} (\u2227I)`,proof:'<div class="q-ma-sm rule"> <div class="rule__siblings"> <div>\u03C8</div> <div>\u03D5</div> </div> <div class="rule__border-top"> <span>\u03D5 \u2227 \u03C8</span> <span class="rule__border-top__rule-name">(\u2227I)</span> </div> </div>'},{rule:"nd-tree-ce1",label:n.global.t("rules.conjunction.elimination.label1"),desc:`${n.global.t("rules.conjunction.elimination.title")} (\u2227E1)`,proof:'<div class="q-ma-sm rule" rule-tree="nd-tree-ce1"><div><span toReplace>\u03D5</span> \u2227 <span toInput>\u03C8</span></div><div class="rule__border-top"><span toReplace>\u03D5</span><span class="rule__border-top__rule-name">(\u2227E1)</span></div></div>'},{rule:"nd-tree-ce2",label:n.global.t("rules.conjunction.elimination.label2"),desc:`${n.global.t("rules.conjunction.elimination.title")} (\u2227E2)`,proof:'<div class="q-ma-sm rule"> <div><span toInput>\u03C8</span> \u2227 <span toReplace>\u03D5</span></div> <div class="rule__border-top"> <span toReplace>\u03D5</span> <span class="rule__border-top__rule-name">(\u2227E2)</span> </div> </div>'},{rule:"nd-tree-di1",label:n.global.t("rules.disjunction.intro.label1"),desc:`${n.global.t("rules.disjunction.intro.title")} (\u2228I1)`,proof:'<div class="q-ma-sm rule"> <div>\u03D5</div> <div class="rule__border-top"> <span>\u03D5 \u2228 \u03C8</span> <span class="rule__border-top__rule-name">(\u2228I1)</span> </div> </div>'},{rule:"nd-tree-di2",label:n.global.t("rules.disjunction.intro.label2"),desc:`${n.global.t("rules.disjunction.intro.title")} (\u2228I2)`,proof:'<div class="q-ma-sm rule"> <div>\u03C8</div> <div class="rule__border-top"> <span>\u03D5 \u2228 \u03C8 </span> <span class="rule__border-top__rule-name">(\u2228I2)</span> </div> </div>'},{rule:"nd-tree-de",label:n.global.t("rules.disjunction.elimination.label"),desc:`${n.global.t("rules.disjunction.elimination.title")} (\u2228E)`,proof:'<div class="q-ma-sm rule"> <div class="rule__siblings"> <div><span toInput>\u03D5 \u2228 \u03C8</span></div> <div class="rule__hypo"> <div>[<span toDelete>\u03D5</span>]</div> <div class="rule__hypo__dots"> <span>.</span> <span>.</span> <span>.</span> </div> <span toReplace>\u03B8</span> </div> <div class="rule__hypo"> <div>[<span toDelete>\u03C8</span>]</div> <div class="rule__hypo__dots"> <span>.</span> <span>.</span> <span>.</span> </div> <span toReplace>\u03B8</span> </div> </div> <div class="rule__border-top"> <span toReplace>\u03B8</span> <span class="rule__border-top__rule-name">(\u2228E)</span> </div> </div>'},{rule:"nd-tree-ii",label:n.global.t("rules.implication.intro.label"),desc:`${n.global.t("rules.implication.intro.title")} (\u21D2I)`,proof:'<div class="q-ma-sm rule"> <div class="rule__hypo"> <div>[\u03D5]</div> <div class="rule__hypo__dots"> <span>.</span> <span>.</span> <span>.</span> </div> \u03C8 </div> <div class="rule__border-top"> <span>\u03D5 \u21D2 \u03C8</span> <span class="rule__border-top__rule-name">(\u21D2I)</span> </div> </div>'},{rule:"nd-tree-ie",label:n.global.t("rules.implication.elimination.label"),desc:`${n.global.t("rules.implication.elimination.title")} (\u21D2E)`,proof:'<div class="q-ma-sm rule"> <div class="rule__siblings"> <div><span toInput>\u03C8</span></div> <div><span toInput>\u03C8</span> \u21D2 <span toReplace>\u03D5</span></div> </div> <div class="rule__border-top"> <span toReplace>\u03D5</span> <span class="rule__border-top__rule-name">(\u21D2E)</span> </div> </div>'}],fs={class:"text-h6 q-mb-md"},vs={class:"text-body1"},ms={class:"text-body1"},bs=["innerHTML"],gs={class:"text-body1"},hs=["innerHTML"],ys={__name:"FOL-naturalDeduction-tree-rules",setup(s){const e=xe(),a=h(""),l=h(!1),t=h(""),r=h(!1),i=h(!1),v=h(void 0),g=h(""),$=h(""),N=["nd-tree-ne","nd-tree-ce1","nd-tree-ce2","nd-tree-de","nd-tree-ie","nd-tree-eqe"],D=["nd-tree-uqi","nd-tree-eqe"],W=h(!1),T=h(void 0),z=h("");async function K(u){l.value=!0,a.value=u.label;let o=await le();if(!o){G();return}let m;if(N.includes(u.value)&&(m=await ve(o,u.tree,u.value),!m)){G(),C.create({type:"negative",message:n.global.t("messages.invalidInput")+u.label+"."});return}let E;if(u.value.includes("q")){if(E=await V(),!E){C.create({type:"negative",message:n.global.t("messages.invalidInput")+u.label+"."}),G();return}if(D.includes(u.value)&&e.checkHypotesisForTerm(E)){C.create({type:"negative",message:n.global.t("messages.rule")+u.label+n.global.t("messages.termInHyp")+"."}),G();return}}const U=new q.Parser(q.Grammar.fromCompiled(re)),F=await Xl(u.value,o,U.feed(o.replace(" ","")).results[0],m,E);if(Array.isArray(F)){if(C.create({type:"positive",message:n.global.t("messages.rule")+u.label+n.global.t("messages.applyed")+o+"."}),F[3]){let Y=e.getHypotesis.length,oe=[];for(let ne=0;ne<F[3].length;ne++)oe.push(String.fromCharCode("a".charCodeAt(0)+Y)),Y++;F[2]=`${F[2]}${oe.join(",")}`}e.setSameLeaves(e.getLeaves.length!=new Set(e.getLeaves).size),e.addToHistory(),e.spliceLeaves(o),F[3]&&(e.addHypotesis(F[3]),ee.set("fol-hypo",e.getHypotesis)),F[1].forEach(Y=>{var p;let oe=e.checkHypotesis(Y,F[0]),ne=(p=F[3])==null?void 0:p.includes(Y);ne&&(e.hypotesis=e.hypotesis.map(c=>c.hypo==Y?{hypo:c.hypo,used:!0}:c)),Y!=""&&!(oe||ne)&&e.pushLeaf(Y)}),ee.set("fol-leaves",e.getLeaves),ee.set("fol-hypo",e.getHypotesis),e.addFormulaToProof(e.proof,F),ee.set("fol-proof",e.getProof),e.resetSameLeaves()}else C.create({type:"negative",message:n.global.t("messages.rule")+u.label+n.global.t("messages.notApplyed")+o+"."});G()}function G(){t.value="",g.value="",z.value="",l.value=!1}function le(){const u=e.getLeaves;return u.length>1?(r.value=!0,new Promise((o,m)=>{const E=se([t,l],([U,F])=>{U!==""&&(r.value=!1,o(U),E()),F==!1&&(r.value=!1,o(!1),E())})})):u[0]}function J(u,o,m){return u.replace(/<span toReplace>(.*?)<\/span>/g,o).replace(/<span toInput>(.*?)<\/span>/g,`<span class="rule__input">${m}</span>`).replace(/<span toDelete>(.*?)<\/span>/g,"")}async function ve(u,o,m){i.value=!0;const E=u.length>1?`(${u})`:u;$.value=J(o,E,m=="nd-tree-de"?"\u2228":""),se(g,F=>{$.value=J(o,E,F.length>1?`(${F})`:F)});const U=await new Promise((F,Y)=>{const oe=se(v,ne=>{ne&&(v.value=void 0,i.value=!1,F(g.value),oe()),ne==!1&&(v.value=void 0,i.value=!1,F(!1),oe())})});if(U){const F=new q.Parser(q.Grammar.fromCompiled(re));try{F.feed(U.replace(" ",""))}catch{return C.create({type:"negative",message:n.global.t("messages.formulaIsNotOK")}),!1}return{asString:U,asAst:F.results[0]}}else return U!=!1&&C.create({type:"negative",message:n.global.t("messages.formulaIsNotOK")}),!1}async function V(){W.value=!0;const u=await new Promise((o,m)=>{const E=se(T,U=>{U&&(T.value=void 0,W.value=!1,o(z.value),E()),U==!1&&(T.value=void 0,W.value=!1,o(!1),E())})});if(u){const o=new q.Parser(q.Grammar.fromCompiled(ge));try{o.feed(u.replace(" ",""))}catch{return C.create({type:"negative",message:n.global.t("messages.termIsNotOK")}),!1}return u}else return!1}function X(u){const o=new q.Parser(q.Grammar.fromCompiled(re));try{if(o.feed(u.replace(" ","")),o.results.length===0)throw new Error("Formula is not valid.")}catch{return!1}return o.results}function he(u){const o=new q.Parser(q.Grammar.fromCompiled(ge));try{if(o.feed(u.replace(" ","")),o.results.length===0)throw new Error("Term is not valid.")}catch{return!1}return o.results}return(u,o)=>(w(),pe("div",null,[y("div",fs,_(u.$t("rules.ndTree")),1),r.value?(w(),S(ce,{key:0,class:"my-card q-my-lg"},{default:b(()=>[f(L,null,{default:b(()=>[y("p",vs,[j(_(u.$t("rules.chooseLeaf"))+" ",1),y("strong",null,_(a.value),1),j(". ")])]),_:1}),f(L,null,{default:b(()=>[f(ye,{modelValue:t.value,"onUpdate:modelValue":o[0]||(o[0]=m=>t.value=m),options:I(e).getLeaves,label:u.$t("rules.leaves")},null,8,["modelValue","options","label"])]),_:1}),f(de,{align:"right"},{default:b(()=>[f(A,{label:u.$t("labels.cancel"),onClick:o[1]||(o[1]=m=>l.value=!1)},null,8,["label"])]),_:1})]),_:1})):R("",!0),i.value?(w(),S(ce,{key:1,class:"my-card q-my-lg"},{default:b(()=>[f(L,null,{default:b(()=>[y("p",ms,[j(_(u.$t("rules.inputFormula"))+" ",1),y("strong",null,_(a.value),1),j(". ")])]),_:1}),f(L,null,{default:b(()=>[y("div",{innerHTML:$.value},null,8,bs)]),_:1}),f(L,null,{default:b(()=>[f(be,{modelValue:g.value,"onUpdate:modelValue":o[2]||(o[2]=m=>g.value=m),validateFormula:X},null,8,["modelValue"])]),_:1}),f(de,{align:"right"},{default:b(()=>[f(A,{label:u.$t("labels.cancel"),onClick:o[3]||(o[3]=()=>{l.value=!1,v.value=!1})},null,8,["label"]),f(A,{label:u.$t("labels.use"),onClick:o[4]||(o[4]=m=>v.value=!0)},null,8,["label"])]),_:1})]),_:1})):R("",!0),W.value?(w(),S(ce,{key:2,class:"my-card q-my-lg"},{default:b(()=>[f(L,null,{default:b(()=>[y("p",gs,[j(_(u.$t("rules.inputTerm"))+" ",1),y("strong",null,_(a.value),1),j(". ")])]),_:1}),f(L,null,{default:b(()=>[f(be,{modelValue:z.value,"onUpdate:modelValue":o[5]||(o[5]=m=>z.value=m),validateFormula:he,term:!0},null,8,["modelValue"])]),_:1}),f(de,{align:"right"},{default:b(()=>[f(A,{label:u.$t("labels.cancel"),onClick:o[6]||(o[6]=()=>{l.value=!1,T.value=!1})},null,8,["label"]),f(A,{label:u.$t("labels.use"),onClick:o[7]||(o[7]=m=>T.value=!0)},null,8,["label"])]),_:1})]),_:1})):R("",!0),f(Fe,{class:"q-mx-auto",style:{height:"600px","max-width":"500px"}},{default:b(()=>[f(Ae,{bordered:"",separator:"",style:{"border-radius":"4px"}},{default:b(()=>[(w(!0),pe($e,null,_e(I(ps),m=>we((w(),S(je,{key:m.rule,clickable:"",class:"q-py-md",onClick:E=>K({value:m.rule,label:m.label,tree:m.proof}),disable:!I(e).isProving||l.value},{default:b(()=>[f(Se,{top:""},{default:b(()=>[f(Ee,{class:"text-body1 text-primary"},{default:b(()=>[j(_(m.desc),1)]),_:2},1024),y("div",{class:"flex",innerHTML:m.proof},null,8,hs)]),_:2},1024)]),_:2},1032,["onClick","disable"])),[[qe]])),128))]),_:1})]),_:1})]))}},$s=[{rule:"nd-fitch-as",label:n.global.t("rules.assumption.label"),desc:`${n.global.t("rules.assumption.title")}`,proof:'<div class="q-ma-sm fitch-proof"> <!-- formulas --> <div> <div> <span class="fitch-index"></span> <div class="fitch-spacer"> <div class="fitch-formula fitch-as">\u03C6</div> </div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula"></div> </div> </div> <!-- rule --> <div> <div class="fitch-rule--as"></div> </div> </div>'},{rule:"nd-fitch-uqi",label:n.global.t("rules.universalQuantifier.intro.label"),desc:`${n.global.t("rules.universalQuantifier.intro.title")} (\u2200I, m)`,proof:'<div class="q-ma-sm fitch-proof"> <!-- formulas --> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6[t/x]</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">(\u2200x)\u03C6</div> </div> </div> <!-- rule --> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2200I, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-uqe",label:n.global.t("rules.universalQuantifier.elimination.label"),desc:`${n.global.t("rules.universalQuantifier.elimination.title")} (\u2200E, m)`,proof:'<div class="q-ma-sm fitch-proof"> <!-- formulas --> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">(\u2200x)\u03C6</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C6[t/x]</div> </div> </div> <!-- rule --> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2200E, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-eqi",label:n.global.t("rules.existentionalQuantifier.intro.label"),desc:`${n.global.t("rules.existentionalQuantifier.intro.title")} (\u2203I, m)`,proof:' <div class="q-ma-sm fitch-proof"> <!-- formulas --> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6[t/x]</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">(\u2203x)\u03C6</div> </div> </div> <!-- rule --> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2203I, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-eqe",label:n.global.t("rules.existentionalQuantifier.elimination.label"),desc:`${n.global.t("rules.existentionalQuantifier.elimination.title")} (\u2203E, m)`,proof:'<div class="q-ma-sm fitch-proof"> <!-- formulas --> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">(\u2203x)\u03C6</div> </div> <div> <span class="fitch-index">i</span> <div class="fitch-spacer"> <div class="fitch-formula fitch-as">\u03C6[t/x]</div> </div> </div> <div> <span class="fitch-index">j</span> <div class="fitch-spacer"> <div class="fitch-formula">\u03C8</div> </div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C8</div> </div> </div> <!-- rule --> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2203E, m, i-j</div> </div> </div>',forInput:{mask:/^(\d+,(\d+-\d+))$/,placeholder:"#,#-#"}},{rule:"nd-fitch-ae1",label:n.global.t("rules.absurdum.elimination.label1"),desc:`${n.global.t("rules.absurdum.elimination.title")} (\u22A5E1, m)`,proof:' <div class="q-ma-sm fitch-proof"> <!-- formulas --> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u22A5</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C6</div> </div> </div> <!-- rule --> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u22A5E1, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-ae2",label:n.global.t("rules.absurdum.elimination.label2"),desc:`${n.global.t("rules.absurdum.elimination.title")} (\u22A5E2, m-n)`,proof:'<div class="q-ma-sm fitch-proof"> <!-- formulas --> <div> <div> <span class="fitch-index">m</span> <div class="fitch-spacer"> <div class="fitch-formula fitch-as">\xAC\u03C6</div> </div> </div> <div> <span class="fitch-index">n</span> <div class="fitch-spacer"> <div class="fitch-formula">\u22A5</div> </div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C6</div> </div> </div> <!-- rule --> <div> <div class="fitch-rule--as">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u22A5E2, m-n</div> </div> </div>',forInput:{mask:/^(\d+-\d+)$/,placeholder:"#-#"}},{rule:"nd-fitch-ni",label:n.global.t("rules.negation.intro.label"),desc:`${n.global.t("rules.negation.intro.title")} (\xACI, m-n)`,proof:'<div class="q-ma-sm fitch-proof"> <!-- formulas --> <div> <div> <span class="fitch-index">m</span> <div class="fitch-spacer"> <div class="fitch-formula fitch-as">\u03C6</div> </div> </div> <div> <span class="fitch-index">n</span> <div class="fitch-spacer"> <div class="fitch-formula">\u22A5</div> </div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\xAC\u03C6</div> </div> </div> <!-- rule --> <div> <div class="fitch-rule--as">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\xACI, m-n</div> </div> </div>',forInput:{mask:/^(\d+-\d+)$/,placeholder:"#-#"}},{rule:"nd-fitch-ne",label:n.global.t("rules.negation.elimination.label"),desc:`${n.global.t("rules.negation.elimination.title")} (\xACE, m, n)`,proof:'<div class="q-ma-sm fitch-proof"> <!-- formulas --> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\xAC\u03C6</div> </div> <div> <span class="fitch-index">n</span> <div class="fitch-formula">\u03C6</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u22A5</div> </div> </div> <!-- rule --> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\xACE, m, n</div> </div> </div>',forInput:{mask:/^(\d+,\d+)$/,placeholder:"#,#"}},{rule:"nd-fitch-ci",label:n.global.t("rules.conjunction.intro.label"),desc:`${n.global.t("rules.conjunction.intro.title")} (\u2227I, m, n)`,proof:'<div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6</div> </div> <div> <span class="fitch-index">n</span> <div class="fitch-formula">\u03C8</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C6\u2227\u03C8</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2227I, m, n</div> </div> </div>',forInput:{mask:/^(\d+,\d+)$/,placeholder:"#,#"}},{rule:"nd-fitch-ce1",label:n.global.t("rules.conjunction.elimination.label1"),desc:`${n.global.t("rules.conjunction.elimination.title")} (\u2227E1, m)`,proof:' <div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6\u2227\u03C8</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C6</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2227E1, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-ce2",label:n.global.t("rules.conjunction.elimination.label2"),desc:`${n.global.t("rules.conjunction.elimination.title")} (\u2227E2, m)`,proof:'  <div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6\u2227\u03C8</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C8</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2227E2, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-di1",label:n.global.t("rules.disjunction.intro.label1"),desc:`${n.global.t("rules.disjunction.intro.title")} (\u2228I1, m)`,proof:'  <div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C6\u2228\u03C8</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2228I1, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-di2",label:n.global.t("rules.disjunction.intro.label2"),desc:`${n.global.t("rules.disjunction.intro.title")} (\u2228I2, m)`,proof:' <div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C8</div> </div> <div> <span class="fitch-index"> </span> <div class="fitch-formula">\u03C6\u2228\u03C8</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2228I2, m</div> </div> </div>',forInput:{mask:/^(\d+)$/,placeholder:"#"}},{rule:"nd-fitch-de",label:n.global.t("rules.disjunction.elimination.label"),desc:`${n.global.t("rules.disjunction.elimination.title")} (\u2228E, m, i-j, k-l)`,proof:' <div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6\u2228\u03C8</div> </div> <div> <span class="fitch-index">i</span> <div class="fitch-spacer"> <div class="fitch-formula fitch-as">\u03C6</div> </div> </div> <div> <span class="fitch-index">j</span> <div class="fitch-spacer"> <div class="fitch-formula">\u03D5</div> </div> </div> <div> <span class="fitch-index">k</span> <div class="fitch-spacer"> <div class="fitch-formula fitch-as">\u03C8</div> </div> </div> <div> <span class="fitch-index">l</span> <div class="fitch-spacer"> <div class="fitch-formula">\u03D5</div> </div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03D5</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule--as">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule--as">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u2228E, m, i-j, k-l</div> </div> </div>',forInput:{mask:/^(\d+,(\d+-\d+),(\d+-\d+))$/,placeholder:"#,#,#"}},{rule:"nd-fitch-ii",label:n.global.t("rules.implication.intro.label"),desc:`${n.global.t("rules.implication.intro.title")} (\u21D2I, m-n)`,proof:' <div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-spacer"> <div class="fitch-formula fitch-as">\u03C6</div> </div> </div> <div> <span class="fitch-index">n</span> <div class="fitch-spacer"> <div class="fitch-formula">\u03C8</div> </div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C6\u21D2\u03C8</div> </div> </div> <div> <div class="fitch-rule--as">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u21D2I, m-n</div> </div> </div>',forInput:{mask:/^(\d+-\d+)$/,placeholder:"#-#"}},{rule:"nd-fitch-ie",label:n.global.t("rules.implication.elimination.label"),desc:`${n.global.t("rules.implication.elimination.title")} (\u21D2E, m, n)`,proof:' <div class="q-ma-sm fitch-proof"> <div> <div> <span class="fitch-index">m</span> <div class="fitch-formula">\u03C6\u21D2\u03C8</div> </div> <div> <span class="fitch-index">n</span> <div class="fitch-formula">\u03C6</div> </div> <div> <span class="fitch-index"></span> <div class="fitch-formula">\u03C8</div> </div> </div> <div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">&nbsp;</div> <div class="fitch-rule">\u21D2E, m, n</div> </div> </div>',forInput:{mask:/^(\d+,\d+)$/,placeholder:"#,#"}}],_s={class:"text-h6 q-mb-md"},xs={class:"text-body1"},ks={class:"fitch-keyboard"},Is=["innerHTML"],ws={__name:"FOL-naturalDeduction-fitch-rules",setup(s){const e=xe(),a=h(""),l=h(!1),t=["nd-fitch-as","nd-fitch-ae1","nd-fitch-di1","nd-fitch-di2"],r=["nd-fitch-uqi","nd-fitch-uqe","nd-fitch-eqi","nd-fitch-eqe"],i=h(!1),v=h(void 0),g=h(""),$=h("");h();const N=h(""),D=h(void 0),W=h(""),T=h();async function z(u,o){l.value=!0,a.value=u,D.value=o==null?void 0:o.mask,W.value=o==null?void 0:o.placeholder;let m=await le();if(m==!1){K();return}if(!G(m)){K(),C.create({type:"negative",message:n.global.t("messages.invalidInput")+u.label+"."});return}const E=await Yl(u.value,m.formula,m.rows,JSON.parse(JSON.stringify(e.proof)),m.term);E?(C.create({type:"positive",message:n.global.t("messages.rule")+u.label+n.global.t("messages.applyedFitch")}),e.addToHistory(),e.addRowToProof(E),ee.set("fol-proof",e.getProof)):C.create({type:"negative",message:n.global.t("messages.rule")+u.label+n.global.t("messages.notApplyedFitch")}),K()}function K(){l.value=!1,a.value="",g.value="",$.value="",N.value="",D.value=void 0}function G(u){return t.includes(a.value.value)&&u.formula==""||r.includes(a.value.value)&&u.term==""?!1:a.value.value=="nd-fitch-as"&&u.formula!=""?!0:!(u.rows==""||u.rows==null)}async function le(){i.value=!0;const u=await new Promise((o,m)=>{const E=se(v,U=>{U&&(v.value=void 0,i.value=!1,o({formula:g.value,term:$.value,rows:N.value}),E()),U==!1&&(v.value=void 0,i.value=!1,o(!1),E())})});if(u&&!u.formula.includes(",")){const o=new q.Parser(q.Grammar.fromCompiled(re)),m=new q.Parser(q.Grammar.fromCompiled(ge));try{o.feed(u.formula.replaceAll(" ",""))}catch{return C.create({type:"negative",message:n.global.t("messages.formulaIsNotOK")}),!1}try{m.feed(u.term.replaceAll(" ",""))}catch{return C.create({type:"negative",message:n.global.t("messages.termIsNotOK")}),!1}return{formula:u.formula,rows:u.rows,term:u.term}}else return u!=!1&&C.create({type:"negative",message:n.global.t("messages.formulaIsNotOK")}),!1}function J(u){const o=new q.Parser(q.Grammar.fromCompiled(re));try{if(o.feed(u.replace(" ","")),o.results.length===0)throw new Error("Formula is not valid.")}catch{return!1}return o.results}function ve(u){const o=new q.Parser(q.Grammar.fromCompiled(ge));try{if(o.feed(u.replace(" ","")),o.results.length===0)throw new Error("Term is not valid.")}catch{return!1}return o.results}function V(u){u.preventDefault()}function X(u){const o=T.value.nativeEl.selectionStart;N.value=N.value.slice(0,o)+u+N.value.slice(o),setTimeout(()=>{document.getElementById(T.value.nativeEl.id).setSelectionRange(o+1,o+1)},1)}function he(){const u=T.value.nativeEl.selectionStart;N.value=N.value.slice(0,u-1)+N.value.slice(u),setTimeout(()=>{document.getElementById(T.value.nativeEl.id).setSelectionRange(u-1,u-1)},1)}return(u,o)=>(w(),pe($e,null,[y("div",_s,_(u.$t("rules.ndFitch")),1),i.value?(w(),S(ce,{key:0,class:"my-card q-my-lg"},{default:b(()=>[f(L,null,{default:b(()=>[y("p",xs,[j(_(u.$t("rules.inputFormulaFitch"))+" ",1),y("strong",null,_(a.value.label),1),j(". ")])]),_:1}),t.includes(a.value.value)?(w(),S(L,{key:0},{default:b(()=>[f(be,{modelValue:g.value,"onUpdate:modelValue":o[0]||(o[0]=m=>g.value=m),validateFormula:J},null,8,["modelValue"])]),_:1})):R("",!0),r.includes(a.value.value)?(w(),S(L,{key:1},{default:b(()=>[f(be,{modelValue:$.value,"onUpdate:modelValue":o[1]||(o[1]=m=>$.value=m),validateFormula:ve,term:"true"},null,8,["modelValue"])]),_:1})):R("",!0),D.value?(w(),S(L,{key:2},{default:b(()=>[f(Ue,{class:"ls-formula-i",outlined:"",clearable:"",autogrow:"",spellcheck:"false",modelValue:N.value,"onUpdate:modelValue":o[2]||(o[2]=m=>N.value=m),ref_key:"rowsInputElm",ref:T,label:u.$t("logic.chooseRows")+" ("+W.value+")",rules:[m=>D.value.test(m)||u.$t("logic.badRowFormat")]},null,8,["modelValue","label","rules"]),y("div",ks,[f(A,{outline:"",onClick:o[3]||(o[3]=m=>X("1")),onMousedown:V,label:"1"}),f(A,{outline:"",onClick:o[4]||(o[4]=m=>X("2")),onMousedown:V,label:"2"}),f(A,{outline:"",onClick:o[5]||(o[5]=m=>X("3")),onMousedown:V,label:"3"}),f(A,{outline:"",onClick:o[6]||(o[6]=m=>X("4")),onMousedown:V,label:"4"}),f(A,{outline:"",onClick:o[7]||(o[7]=m=>X("5")),onMousedown:V,label:"5"}),f(A,{outline:"",onClick:o[8]||(o[8]=m=>X("6")),onMousedown:V,label:"6"}),f(A,{outline:"",onClick:o[9]||(o[9]=m=>X("-")),onMousedown:V,label:"-",class:"fitch-keyboard__double"}),f(A,{outline:"",onClick:o[10]||(o[10]=m=>X(",")),onMousedown:V,label:",",class:"fitch-keyboard__double"}),f(A,{class:"fitch-keyboard__remove fitch-keyboard__double",outline:"",onClick:o[11]||(o[11]=m=>he()),onMousedown:V,label:"\u2190"})])]),_:1})):R("",!0),f(de,{align:"right"},{default:b(()=>[f(A,{label:u.$t("labels.cancel"),onClick:o[12]||(o[12]=()=>{l.value=!1,v.value=!1})},null,8,["label"]),f(A,{label:u.$t("labels.use"),onClick:o[13]||(o[13]=m=>v.value=!0)},null,8,["label"])]),_:1})]),_:1})):R("",!0),f(Fe,{class:"q-mx-auto",style:{height:"600px","max-width":"500px"}},{default:b(()=>[f(Ae,{bordered:"",separator:"",style:{"border-radius":"4px"}},{default:b(()=>[(w(!0),pe($e,null,_e(I($s),m=>we((w(),S(je,{key:m.rule,clickable:"",class:"q-py-md",onClick:E=>z({value:m.rule,label:m.label},m.forInput),disable:!I(e).isProving||l.value},{default:b(()=>[f(Se,{top:""},{default:b(()=>[f(Ee,{class:"text-body1 text-primary"},{default:b(()=>[j(_(m.desc),1)]),_:2},1024),y("div",{class:"flex",innerHTML:m.proof},null,8,Is)]),_:2},1024)]),_:2},1032,["onClick","disable"])),[[qe]])),128))]),_:1})]),_:1})],64))}},qs={class:"q-my-sm text-center"},Es={class:"container"},Fs={class:"row justify-center items-stretch gap"},As={class:"col-md-7 col-sm-12"},js={class:"flex justify-end gap back-button q-my-md"},Ss={key:1},Cs={class:"text-h6 q-my-md"},Ns={class:"flex gap"},Qs={class:"col-md-4 col-sm-12"},Bs={__name:"FirstOrderLogic",setup(s){const e=xe();function a(){return Ne(e.getInputFormula,e.getMethod)}function l(){let t=Ne(e.getInputFormula,e.getMethod);t&&(e.clearTree(),e.getMethod=="ND"&&t.hypothesis&&(e.getNotation=="tree"?(t.hypothesis[0]!=""&&(e.addHypotesis(t.hypothesis),ee.set("fol-hypo",e.getHypotesis)),t=t.formula):t.hypothesis.forEach(r=>{e.addRowToProof({depth:1,formula:r,rule:"AS"})})),e.getNotation=="tree"?(e.setProof(t),ee.set("fol-proof",e.getProof),e.pushLeaf(t),ee.set("fol-leaves",e.getLeaves)):(e.setFitchProoving(),ee.set("fol-fitch",e.getConclusion)),ee.set("fol-formula",e.getInputFormula),C.create({type:"positive",message:n.global.t("messages.formulaIsOK")}))}return(t,r)=>(w(),S(Me,{style:{"min-height":"100%"}},{default:b(()=>{var i;return[y("h6",qs,_(t.$t("labels.firstorder")),1),y("div",Es,[y("div",Fs,[y("div",As,[f(be,{modelValue:I(e).inputFormula,"onUpdate:modelValue":r[0]||(r[0]=v=>I(e).inputFormula=v),validateFormula:a,submit:l},null,8,["modelValue"]),y("div",js,[I(e).isProving||I(e).isProven?(w(),S(A,{key:0,outline:"",label:t.$t("labels.remove"),onClick:r[1]||(r[1]=v=>I(e).clearTree())},null,8,["label"])):R("",!0),I(e).history.length?(w(),S(A,{key:1,outline:"",label:t.$t("labels.back"),onClick:r[2]||(r[2]=v=>I(e).retrieveFromHistory())},null,8,["label"])):R("",!0)]),I(e).isProven?(w(),S(Pe,{key:0,class:"bg-positive q-mx-xl q-my-md text-white",rounded:""},{avatar:b(()=>[f(Le,{name:"check",color:"white"})]),default:b(()=>[j(" "+_(t.$t("messages.isProven")),1)]),_:1})):R("",!0),I(e).getMethod=="ND"&&((i=I(e).getHypotesis)==null?void 0:i.length)>0&&I(e).getHypotesis!="undefined"?(w(),pe("div",Ss,[y("div",Cs,_(t.$t("labels.hypos")),1),y("div",Ns,[(w(!0),pe($e,null,_e(I(e).getHypotesis,(v,g)=>(w(),pe("div",{key:v.hypo},[y("span",null,_(String.fromCharCode("a".charCodeAt(0)+g))+":",1),f(Oe,{label:v.hypo,dense:"",outline:"",square:"",color:v.used?"positive":"primary",size:"lg"},null,8,["label","color"])]))),128))])])):R("",!0),I(e).getNotation=="tree"?(w(),S(Re,{key:2,proof:I(e).getProof},null,8,["proof"])):R("",!0),I(e).getNotation=="fitch"?(w(),S(Te,{key:3,proof:I(e).getProof,conclusion:I(e).getConclusion},null,8,["proof","conclusion"])):R("",!0)]),y("div",Qs,[f(Ve,{logic:"fol","onUpdate:method":I(e).setMethod,"onUpdate:notation":I(e).setNotation},null,8,["onUpdate:method","onUpdate:notation"]),I(e).getMethod=="GSK"&&I(e).getNotation=="tree"?(w(),S(cs,{key:0})):R("",!0),I(e).getMethod=="ND"&&I(e).getNotation=="tree"?(w(),S(ys,{key:1})):R("",!0),I(e).getMethod=="ND"&&I(e).getNotation=="fitch"?(w(),S(ws,{key:2})):R("",!0)])])])]}),_:1}))}};export{Bs as default};
